{"version":3,"file":"AutonomousAgent-D6TXLLsS.js","sources":["../../src/components/AutonomousAgent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Brain, Activity, Search, FileText, AlertTriangle, CheckCircle } from 'lucide-react';\nimport type { AgentState, Investigation, AgentTrigger } from '../types';\nimport { mockPipelines } from '../data/mockData';\nimport styles from './AutonomousAgent.module.css';\n\nconst createMockInvestigation = (id: string, trigger: AgentTrigger): Investigation => {\n  const now = new Date();\n  const startTime = new Date(now.getTime() - Math.random() * 30 * 60 * 1000);\n  \n  return {\n    id,\n    startTime,\n    endTime: new Date(startTime.getTime() + 25 * 60 * 1000),\n    status: 'completed',\n    trigger,\n    triggerData: { source: 'linkedin', failureCount: 12 },\n    steps: [\n      {\n        id: 'step-1',\n        timestamp: startTime,\n        action: 'Analyze authentication patterns',\n        details: 'Detected OAuth token failures across LinkedIn pipelines',\n        status: 'completed'\n      }\n    ],\n    findings: [\n      {\n        id: 'auth-pattern-001',\n        timestamp: new Date(startTime.getTime() + 2 * 60 * 1000),\n        type: 'pattern',\n        title: 'OAuth Token Rotation Failure - MSTIC Data Collection Impact',\n        description: 'Critical: LinkedIn threat intelligence collection stopped. OAuth tokens expired across 12 data pipelines.',\n        confidence: 95,\n        severity: 'high',\n        affectedPipelines: mockPipelines.filter(p => p.name.includes('LinkedIn')).slice(0, 12).map(p => p.id),\n        evidence: [\n          'HTTP 401 errors started 14:23 UTC across all LinkedIn TI pipelines',\n          'Token expiry aligns with 72-hour LinkedIn API lifecycle'\n        ],\n        suggestedActions: [\n          'IMMEDIATE: Deploy backup OAuth credentials to restore TI collection',\n          'Validate token refresh automation in auth-service-v2.1'\n        ]\n      }\n    ],\n    recommendations: [\n      'Implement automated token refresh for LinkedIn API',\n      'Set up monitoring for authentication failures',\n      'Create backup authentication mechanisms'\n    ],\n    affectedPipelines: mockPipelines.filter(p => p.name.includes('LinkedIn')).slice(0, 12).map(p => p.id),\n    estimatedImpact: {\n      severity: 'high',\n      affectedSources: ['LinkedIn'],\n      estimatedDowntime: 15\n    }\n  } as Investigation;\n};\n\nconst realtimeSimulationScenarios = [\n  {\n    id: 'azure-ad-anomaly',\n    name: 'Azure AD Authentication Anomaly Detection',\n    description: 'Detects unusual authentication patterns and potential compromise',\n    severity: 'high'\n  },\n  {\n    id: 'data-exfiltration',\n    name: 'Suspicious Data Transfer Pattern',\n    description: 'Unusual data transfer volumes detected in threat intelligence pipelines',\n    severity: 'critical'\n  }\n];\n\nconst AutonomousAgent: React.FC = () => {\n  const [agentState, setAgentState] = useState<AgentState>({\n    status: 'monitoring',\n    currentInvestigation: undefined,\n    recentInvestigations: [],\n    triggers: [\n      {\n        id: 'auth-failure-pattern',\n        name: 'Authentication Failure Pattern Detection',\n        description: 'Monitors for cascading authentication failures across threat intelligence data sources',\n        enabled: true,\n        conditions: {\n          failureThreshold: 5,\n          timeWindow: 15,\n          patternType: 'cascade_failures'\n        }\n      }\n    ],\n    findings: [],\n    activityLog: [],\n    lastActivity: new Date(),\n    investigationsToday: 247,\n    meanTimeToResolution: 8.5\n  });\n\n  const [isInvestigating, setIsInvestigating] = useState(false);\n  const [selectedView, setSelectedView] = useState<'realtime' | 'status'>('realtime');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (Math.random() < 0.1) {\n        const randomTrigger = agentState.triggers[0];\n        const investigation = createMockInvestigation('linkedin-auth-cascade', randomTrigger);\n        \n        setAgentState(prev => ({\n          ...prev,\n          recentInvestigations: [...prev.recentInvestigations, investigation].slice(-10),\n          investigationsToday: prev.investigationsToday + 1,\n          lastActivity: new Date()\n        }));\n      }\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [agentState.triggers]);\n\n  const runDemoInvestigation = async () => {\n    setIsInvestigating(true);\n    \n    const investigation = createMockInvestigation('linkedin-auth-cascade', agentState.triggers[0]);\n    \n    setAgentState(prev => ({\n      ...prev,\n      currentInvestigation: investigation,\n      status: 'investigating'\n    }));\n\n    setTimeout(() => {\n      setIsInvestigating(false);\n      setAgentState(prev => ({\n        ...prev,\n        currentInvestigation: undefined,\n        recentInvestigations: [...prev.recentInvestigations, investigation].slice(-10),\n        status: 'monitoring'\n      }));\n    }, 3000);\n  };\n\n  const getStatusIcon = () => {\n    switch (agentState.status) {\n      case 'monitoring':\n        return <CheckCircle className={styles.statusIcon} />;\n      case 'investigating':\n        return <Activity className={`${styles.statusIcon} ${styles.investigating}`} />;\n      case 'reporting':\n        return <AlertTriangle className={`${styles.statusIcon} ${styles.alert}`} />;\n      default:\n        return <Brain className={styles.statusIcon} />;\n    }\n  };\n\n  const renderRealtimeSimulation = () => (\n    <div className={styles.realtimeSection}>\n      <div className={styles.sectionHeader}>\n        <Activity className={styles.sectionIcon} />\n        <h3>Real-time Threat Investigation Simulation</h3>\n      </div>\n      \n      <div className={styles.scenarioGrid}>\n        {realtimeSimulationScenarios.map(scenario => (\n          <div key={scenario.id} className={`${styles.scenarioCard} ${styles[scenario.severity]}`}>\n            <h4>{scenario.name}</h4>\n            <p>{scenario.description}</p>\n            <button \n              className={styles.runButton}\n              onClick={runDemoInvestigation}\n              disabled={isInvestigating}\n            >\n              {isInvestigating ? 'Investigating...' : 'Run Investigation'}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {agentState.currentInvestigation && (\n        <div className={styles.activeInvestigations}>\n          <h4>Active Investigation</h4>\n          <div className={styles.investigationCard}>\n            <div className={styles.investigationHeader}>\n              <FileText className={styles.investigationIcon} />\n              <span className={styles.investigationTitle}>\n                {agentState.currentInvestigation.trigger.name}\n              </span>\n              <span className={styles.investigationTime}>\n                {agentState.currentInvestigation.startTime.toLocaleTimeString()}\n              </span>\n            </div>\n            <div className={styles.investigationProgress}>\n              <div className={styles.progressBar}>\n                <div className={styles.progressFill}></div>\n              </div>\n              <span>Analyzing threat patterns...</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderStatusOverview = () => (\n    <div className={styles.statusSection}>\n      <div className={styles.agentStatus}>\n        <div className={styles.statusHeader}>\n          {getStatusIcon()}\n          <div className={styles.statusInfo}>\n            <h3>MSTIC Autonomous Agent</h3>\n            <p className={styles.statusText}>\n              Status: {agentState.status} | \n              Active Triggers: {agentState.triggers.filter(t => t.enabled).length} | \n              Current Investigation: {agentState.currentInvestigation ? '1' : '0'}\n            </p>\n          </div>\n        </div>\n        \n        <div className={styles.metricsGrid}>\n          <div className={styles.metric}>\n            <span className={styles.metricValue}>{agentState.investigationsToday}</span>\n            <span className={styles.metricLabel}>Investigations Today</span>\n          </div>\n          <div className={styles.metric}>\n            <span className={styles.metricValue}>{agentState.recentInvestigations.length}</span>\n            <span className={styles.metricLabel}>Recent Investigations</span>\n          </div>\n          <div className={styles.metric}>\n            <span className={styles.metricValue}>{agentState.meanTimeToResolution}min</span>\n            <span className={styles.metricLabel}>Mean Resolution Time</span>\n          </div>\n          <div className={styles.metric}>\n            <span className={styles.metricValue}>{agentState.triggers.length}</span>\n            <span className={styles.metricLabel}>Active Triggers</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.triggersSection}>\n        <h4>Active Triggers</h4>\n        {agentState.triggers.map(trigger => (\n          <div key={trigger.id} className={styles.triggerCard}>\n            <div className={styles.triggerHeader}>\n              <h5>{trigger.name}</h5>\n              <span className={`${styles.triggerStatus} ${trigger.enabled ? styles.active : styles.inactive}`}>\n                {trigger.enabled ? 'Enabled' : 'Disabled'}\n              </span>\n            </div>\n            <p>{trigger.description}</p>\n            <div className={styles.triggerConditions}>\n              {trigger.conditions.failureThreshold && (\n                <span>Threshold: {trigger.conditions.failureThreshold} failures</span>\n              )}\n              {trigger.conditions.timeWindow && (\n                <span>Window: {trigger.conditions.timeWindow} minutes</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={styles.autonomousAgent}>\n      <div className={styles.header}>\n        <Brain className={styles.headerIcon} />\n        <div className={styles.headerContent}>\n          <h2>Autonomous Threat Investigation Agent</h2>\n          <p>AI-powered automated investigation and response for MSTIC threat intelligence pipelines</p>\n        </div>\n      </div>\n\n      <div className={styles.viewTabs}>\n        <button \n          className={`${styles.tab} ${selectedView === 'realtime' ? styles.active : ''}`}\n          onClick={() => setSelectedView('realtime')}\n        >\n          <Activity className={styles.tabIcon} />\n          Real-time Demo\n        </button>\n        <button \n          className={`${styles.tab} ${selectedView === 'status' ? styles.active : ''}`}\n          onClick={() => setSelectedView('status')}\n        >\n          <Search className={styles.tabIcon} />\n          Agent Status\n        </button>\n      </div>\n\n      <div className={styles.content}>\n        {selectedView === 'realtime' && renderRealtimeSimulation()}\n        {selectedView === 'status' && renderStatusOverview()}\n      </div>\n    </div>\n  );\n};\n\nexport default AutonomousAgent;"],"names":["createMockInvestigation","id","trigger","now","startTime","mockPipelines","p","realtimeSimulationScenarios","AutonomousAgent","agentState","setAgentState","useState","isInvestigating","setIsInvestigating","selectedView","setSelectedView","useEffect","interval","randomTrigger","investigation","prev","runDemoInvestigation","getStatusIcon","jsx","CheckCircle","styles","Activity","AlertTriangle","Brain","renderRealtimeSimulation","jsxs","scenario","FileText","renderStatusOverview","t","Search"],"mappings":"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"}