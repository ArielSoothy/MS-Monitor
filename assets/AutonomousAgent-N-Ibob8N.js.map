{"version":3,"file":"AutonomousAgent-N-Ibob8N.js","sources":["../../src/utils/aiService.ts","../../src/components/AutonomousAgent.tsx"],"sourcesContent":["import type { Pipeline, Alert, Investigation, InvestigationFinding, InvestigationStep } from '../types';\n\n// Mock AI Service that simulates Claude API for autonomous investigation\nexport class AutonomousInvestigationService {\n  private static instance: AutonomousInvestigationService;\n\n  static getInstance(): AutonomousInvestigationService {\n    if (!AutonomousInvestigationService.instance) {\n      AutonomousInvestigationService.instance = new AutonomousInvestigationService();\n    }\n    return AutonomousInvestigationService.instance;\n  }\n\n  // Simulate AI analysis based on pipeline data and alerts\n  async investigateAnomalies(\n    pipelines: Pipeline[], \n    _alerts: Alert[], \n    triggerType: string\n  ): Promise<{\n    findings: InvestigationFinding[];\n    summary: string;\n    recommendations: string[];\n    steps: InvestigationStep[];\n  }> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n    const failedPipelines = pipelines.filter(p => p.status === 'failed');\n    \n    // Analyze patterns\n    const sourceGroups = this.groupPipelinesBySource(failedPipelines);\n    const timePatterns = this.analyzeTimePatterns(failedPipelines);\n    \n    // Generate AI findings based on pattern analysis\n    const findings = this.generateFindings(sourceGroups, timePatterns, triggerType);\n    \n    return {\n      findings,\n      summary: `Investigation completed: ${failedPipelines.length} failed pipelines analyzed. Pattern analysis suggests ${this.getPrimaryRootCause(sourceGroups)}.`,\n      recommendations: this.generateRecommendations(sourceGroups, triggerType),\n      steps: this.generateInvestigationSteps(triggerType, failedPipelines.length)\n    };\n  }\n\n  private groupPipelinesBySource(pipelines: Pipeline[]): Record<string, Pipeline[]> {\n    return pipelines.reduce((groups, pipeline) => {\n      const source = pipeline.source;\n      if (!groups[source]) {\n        groups[source] = [];\n      }\n      groups[source].push(pipeline);\n      return groups;\n    }, {} as Record<string, Pipeline[]>);\n  }\n\n  private analyzeTimePatterns(pipelines: Pipeline[]): any {\n    const times = pipelines.map(p => new Date(p.lastRun).getTime());\n    const minTime = Math.min(...times);\n    const maxTime = Math.max(...times);\n    \n    return {\n      timeSpread: maxTime - minTime,\n      clustered: (maxTime - minTime) < 300000, // 5 minutes\n      averageTime: times.reduce((a, b) => a + b, 0) / times.length\n    };\n  }\n\n  private generateFindings(sourceGroups: Record<string, Pipeline[]>, _timePatterns: any, _triggerType: string): InvestigationFinding[] {\n    const findings: InvestigationFinding[] = [];\n    \n    // Add authentication cascade finding if multiple sources affected\n    if (Object.keys(sourceGroups).length > 1) {\n      findings.push({\n        id: `cascade-${Date.now()}`,\n        timestamp: new Date(),\n        type: 'correlation',\n        title: 'Authentication Service Cascade Failure',\n        description: `Detected systematic authentication failures across ${Object.keys(sourceGroups).length} data sources.`,\n        confidence: 94,\n        severity: 'high',\n        affectedPipelines: Object.values(sourceGroups).flat().map(p => p.id),\n        evidence: [\n          'Regional disparity in pipeline failures detected',\n          'Similar incident pattern recorded in historical data'\n        ],\n        suggestedActions: [\n          'Verify OAuth token refresh service status',\n          'Check token rotation schedule and regional deployment'\n        ]\n      });\n    }\n\n    return findings;\n  }\n\n  private getPrimaryRootCause(sourceGroups: Record<string, Pipeline[]>): string {\n    if (Object.keys(sourceGroups).length > 2) {\n      return 'shared infrastructure dependency failure';\n    } else if (Object.keys(sourceGroups).length === 1) {\n      return 'source-specific service disruption';\n    } else {\n      return 'authentication cascade failure';\n    }\n  }\n\n  private generateRecommendations(sourceGroups: Record<string, Pipeline[]>, _triggerType: string): string[] {\n    const recommendations: string[] = [];\n    \n    if (Object.keys(sourceGroups).length > 1) {\n      recommendations.push('Deploy token refresh service to affected regions (ETA: 8 minutes)');\n      recommendations.push('Implement emergency authentication bypass for critical pipelines');\n      recommendations.push('Review authentication service logs for error correlation');\n    } else {\n      recommendations.push('Review source-specific API quotas and rate limits');\n      recommendations.push('Implement fallback data collection mechanisms');\n      recommendations.push('Contact vendor support for service status updates');\n    }\n    \n    return recommendations;\n  }\n\n  private generateInvestigationSteps(triggerType: string, failureCount: number): InvestigationStep[] {\n    return [\n      {\n        id: `step-${Date.now()}`,\n        timestamp: new Date(),\n        action: `Autonomous trigger: ${triggerType}`,\n        details: `Detected ${failureCount} pipeline failures matching trigger criteria`,\n        status: 'completed',\n        data: { result: 'Pattern analysis initiated automatically' }\n      }\n    ];\n  }\n\n  // Historical patterns for the UI\n  getHistoricalPatterns(): Array<{\n    date: string;\n    pattern: string;\n    resolution: string;\n    duration: string;\n  }> {\n    return [\n      {\n        date: '2024-11-15',\n        pattern: 'Authentication cascade failure (LinkedIn, Twitter)',\n        resolution: 'Regional token service deployment',\n        duration: '12 minutes'\n      },\n      {\n        date: '2024-10-22',\n        pattern: 'Multi-source API rate limiting',\n        resolution: 'Emergency quota increase',\n        duration: '8 minutes'\n      }\n    ];\n  }\n\n  async getInvestigationUpdate(): Promise<Partial<Investigation>> {\n    // Simulate update\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return {\n      status: 'active',\n      // progress: Math.floor(Math.random() * 40) + 60,\n      // currentStep: 'Analyzing authentication service dependencies'\n    };\n  }\n}\n\nexport const aiService = AutonomousInvestigationService.getInstance();\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Brain, Activity, AlertTriangle, CheckCircle, Clock, Search, FileText, TrendingUp, Users, HelpCircle } from 'lucide-react';\nimport type { AgentState, Investigation, AgentTrigger } from '../types';\nimport { mockPipelines, mockAlerts } from '../data/mockData';\nimport { aiService } from '../utils/aiService';\nimport HowItWorksModal from './HowItWorksModal';\nimport styles from './AutonomousAgent.module.css';\n\n// MSTIC-focused realistic investigation scenarios for Microsoft interview demo\nconst createMockInvestigation = (id: string, trigger: AgentTrigger): Investigation => {\n  const now = new Date();\n  const startTime = new Date(now.getTime() - Math.random() * 30 * 60 * 1000); // Last 30 minutes\n  \n  const investigations: Record<string, Partial<Investigation>> = {\n    'linkedin-auth-cascade': {\n      trigger: {\n        ...trigger,\n        name: 'LinkedIn TI Collection Authentication Failure',\n        conditions: { failureThreshold: 5, timeWindow: 15, patternType: 'cascade_failures' }\n      },\n      findings: [\n        {\n          id: 'auth-pattern-001',\n          timestamp: new Date(startTime.getTime() + 2 * 60 * 1000),\n          type: 'pattern',\n          title: 'OAuth Token Rotation Failure - MSTIC Data Collection Impact',\n          description: 'Critical: LinkedIn threat intelligence collection stopped. OAuth tokens expired across 12 data pipelines, blocking threat actor profile monitoring and C2 infrastructure discovery.',\n          confidence: 95,\n          severity: 'high',\n          affectedPipelines: mockPipelines.filter(p => p.name.includes('LinkedIn')).slice(0, 12).map(p => p.id),\n          evidence: [\n            'HTTP 401 errors started 14:23 UTC across all LinkedIn TI pipelines',\n            'Token expiry aligns with 72-hour LinkedIn API lifecycle',\n            'Key monitored threat actors: APT28, Lazarus Group profiles now inaccessible',\n            'C2 domain discovery pipeline failed - 847 domains pending analysis'\n          ],\n          suggestedActions: [\n            'IMMEDIATE: Deploy backup OAuth credentials to restore TI collection',\n            'Validate token refresh automation in auth-service-v2.1',\n            'Review LinkedIn API compliance for MSTIC use case',\n            'Implement redundant authentication for critical TI sources'\n          ]\n        },\n        {\n          id: 'correlation-001',\n          timestamp: new Date(startTime.getTime() + 5 * 60 * 1000),\n          type: 'correlation',\n          title: 'Geographic Data Collection Gap Analysis',\n          description: 'EU-based threat intelligence collection shows 89% failure rate vs 12% in US region. Critical gap in Eastern European threat actor monitoring.',\n          confidence: 87,\n          severity: 'high',\n          affectedPipelines: [],\n          evidence: [\n            'EU LinkedIn TI pipelines: 89% failure (affects APT28, FancyBear monitoring)',\n            'US LinkedIn TI pipelines: 12% failure (minimal impact)',\n            'Root cause: Auth service v2.1 deployed only to US-East-1',\n            'Missing threat intelligence from 23 high-priority EU-based actors'\n          ],\n          suggestedActions: [\n            'URGENT: Deploy auth-service-v2.1 to EU-West-1 and EU-Central-1',\n            'Implement cross-region failover for critical TI collection',\n            'Add geo-redundancy monitoring for threat actor surveillance'\n          ]\n        }\n      ],\n      summary: `CRITICAL MSTIC IMPACT: LinkedIn threat intelligence collection down 14:23 UTC affecting 12 pipelines.\nROOT CAUSE: OAuth token expiration + regional deployment gap (auth-service-v2.1 missing in EU).\nBUSINESS IMPACT: 847 C2 domains unanalyzed, 23 EU threat actors unmonitored.\nRESOLUTION: Deploy EU auth service + implement backup credentials.\nETA: 15 minutes | Historical precedent: 2024-11-15 (18min resolution)`,\n      recommendations: [\n        'IMMEDIATE: Deploy auth-service-v2.1 to EU regions',\n        'Implement backup OAuth credential rotation for critical TI sources',\n        'Add proactive token expiration monitoring (24h warning)',\n        'Create cross-region authentication redundancy for high-priority threat actors',\n        'Review LinkedIn API compliance for threat intelligence use cases'\n      ]\n    },\n    'azure-ad-anomaly': {\n      trigger: {\n        ...trigger,\n        name: 'Azure AD Threat Intelligence Pipeline Anomaly',\n        conditions: { patternType: 'performance_degradation' }\n      },\n      findings: [\n        {\n          id: 'azuread-perf-001',\n          timestamp: new Date(startTime.getTime() + 3 * 60 * 1000),\n          type: 'anomaly',\n          title: 'Azure AD Graph API Performance Degradation - 400% Latency Increase',\n          description: 'Critical performance degradation in Azure AD threat intelligence pipelines. Sign-in log analysis for compromise detection experiencing 400% latency increase.',\n          confidence: 94,\n          severity: 'high',\n          affectedPipelines: mockPipelines.filter(p => p.name.includes('Azure AD')).map(p => p.id),\n          evidence: [\n            'Average API response time: 2.3s (baseline: 0.6s)',\n            'Graph API throttling events increased 800% in last hour',\n            'Impossible travel detection pipeline backlog: 12,847 events',\n            'Suspicious sign-in analysis delayed by 45 minutes',\n            'Azure service health shows no reported issues'\n          ],\n          suggestedActions: [\n            'IMMEDIATE: Implement request batching for Graph API calls',\n            'Scale horizontal processing for sign-in log analysis',\n            'Activate backup Office 365 audit log pipeline',\n            'Contact Azure Support for premium API quota increase'\n          ]\n        },\n        {\n          id: 'threat-impact-001',\n          timestamp: new Date(startTime.getTime() + 7 * 60 * 1000),\n          type: 'correlation',\n          title: 'Threat Detection Impact Assessment',\n          description: 'Performance degradation causing critical delays in threat detection workflows. Multiple high-priority security scenarios affected.',\n          confidence: 91,\n          severity: 'high',\n          affectedPipelines: [],\n          evidence: [\n            'Impossible travel alerts delayed by 45+ minutes',\n            'Credential stuffing detection pipeline 67% behind',\n            'Nation-state actor attribution delayed for 23 incidents',\n            'MITRE ATT&CK mapping pipeline processing 3 hours behind',\n            'SOC escalation queue growing: +156 unprocessed events'\n          ],\n          suggestedActions: [\n            'Activate emergency processing mode (reduced fidelity)',\n            'Prioritize high-confidence threat indicators',\n            'Implement circuit breaker for Graph API calls',\n            'Scale out Azure Functions for parallel processing'\n          ]\n        }\n      ],\n      summary: `CRITICAL MSTIC ALERT: Azure AD threat intelligence severely degraded due to 400% API latency increase.\nTHREAT IMPACT: 45min delay in impossible travel detection, 67% behind on credential stuffing analysis.\nOPERATIONAL IMPACT: 12,847 sign-in events in backlog, SOC queue +156 unprocessed.\nROOT CAUSE: Graph API throttling (800% increase) - likely quota exhaustion or service degradation.\nMITIGATION: Request batching + horizontal scaling + backup audit pipeline activation.`,\n      recommendations: [\n        'IMMEDIATE: Implement Graph API request batching and retry logic',\n        'Scale Azure Functions horizontally for parallel sign-in analysis',\n        'Activate Office 365 audit backup pipeline',\n        'Request premium Graph API quota from Azure Support',\n        'Implement circuit breaker pattern for API resilience',\n        'Add predictive scaling based on sign-in volume patterns'\n      ]\n    },\n    'github-threat-intel': {\n      trigger: {\n        ...trigger,\n        name: 'GitHub Threat Intelligence Collection Failure',\n        conditions: { patternType: 'multiple_failures' }\n      },\n      findings: [\n        {\n          id: 'github-malware-001',\n          timestamp: new Date(startTime.getTime() + 4 * 60 * 1000),\n          type: 'pattern',\n          title: 'GitHub Malware Repository Monitoring Pipeline Failure',\n          description: 'Critical failure in GitHub-based threat intelligence collection. Malware repository monitoring and IOC extraction pipelines down.',\n          confidence: 96,\n          severity: 'high',\n          affectedPipelines: mockPipelines.filter(p => p.name.includes('GitHub')).map(p => p.id),\n          evidence: [\n            'GitHub API rate limit exhausted: 5000/5000 requests used',\n            'Malware sample collection stopped at 11:47 UTC',\n            'IOC extraction pipeline failed for 234 new repositories',\n            'C2 framework detection pipeline 8 hours behind',\n            'Missing coverage for 15 new malware families'\n          ],\n          suggestedActions: [\n            'IMMEDIATE: Deploy backup GitHub Apps with fresh rate limits',\n            'Implement intelligent sampling for malware repositories',\n            'Activate secondary GitHub Enterprise monitoring',\n            'Prioritize high-confidence malware family repositories'\n          ]\n        }\n      ],\n      summary: `GITHUB THREAT INTEL DOWN: Malware repository monitoring failed due to API rate exhaustion.\nSECURITY IMPACT: 234 malware repos unanalyzed, 15 new families undetected, C2 detection 8h behind.\nRESOLUTION: Deploy backup GitHub Apps + intelligent sampling + prioritization.`\n    }\n  };\n\n  const baseInvestigation = investigations[id] || {};\n  \n  return {\n    id,\n    startTime,\n    status: 'active',\n    trigger,\n    triggerData: { failedPipelines: Math.floor(Math.random() * 10) + 5 },\n    steps: [\n      {\n        id: 'step-1',\n        timestamp: new Date(startTime.getTime() + 30 * 1000),\n        action: 'Triggered by cascade failure detection',\n        details: `Detected ${baseInvestigation.trigger?.conditions?.failureThreshold || 5} related failures within ${baseInvestigation.trigger?.conditions?.timeWindow || 15} minutes`,\n        status: 'completed'\n      },\n      {\n        id: 'step-2',\n        timestamp: new Date(startTime.getTime() + 60 * 1000),\n        action: 'Analyzing failure patterns',\n        details: 'Examining error codes, timestamps, and affected pipeline characteristics',\n        status: 'completed'\n      },\n      {\n        id: 'step-3',\n        timestamp: new Date(startTime.getTime() + 120 * 1000),\n        action: 'Correlating with historical data',\n        details: 'Checking last 30 days for similar patterns and resolutions',\n        status: 'completed'\n      },\n      {\n        id: 'step-4',\n        timestamp: new Date(startTime.getTime() + 180 * 1000),\n        action: 'Generating investigation report',\n        details: 'Compiling findings and recommended actions',\n        status: 'in_progress'\n      }\n    ],\n    findings: baseInvestigation.findings || [],\n    summary: baseInvestigation.summary,\n    recommendations: baseInvestigation.recommendations || [],\n    affectedPipelines: baseInvestigation.findings?.[0]?.affectedPipelines || [],\n    estimatedImpact: {\n      severity: 'high',\n      affectedSources: ['LinkedIn', 'Twitter'],\n      estimatedDowntime: 25\n    },\n    ...baseInvestigation\n  };\n};\n\nconst mockAgentTriggers: AgentTrigger[] = [\n  {\n    id: 'threat-intel-cascade',\n    name: 'Threat Intelligence Collection Cascade Failure',\n    description: 'Detects when multiple threat intelligence sources fail simultaneously, indicating authentication or API issues',\n    enabled: true,\n    conditions: {\n      failureThreshold: 3,\n      timeWindow: 15,\n      patternType: 'cascade_failures'\n    }\n  },\n  {\n    id: 'security-api-degradation',\n    name: 'Security API Performance Degradation',\n    description: 'Monitors for performance issues affecting threat detection pipelines (Graph API, Office 365, etc.)',\n    enabled: true,\n    conditions: {\n      patternType: 'performance_degradation'\n    }\n  },\n  {\n    id: 'malware-collection-failure',\n    name: 'Malware Intelligence Collection Failure',\n    description: 'Triggers when GitHub, VirusTotal, or other malware intelligence sources fail',\n    enabled: true,\n    conditions: {\n      failureThreshold: 2,\n      timeWindow: 10,\n      patternType: 'multiple_failures'\n    }\n  },\n  {\n    id: 'authentication-anomaly',\n    name: 'Cross-Platform Authentication Anomaly',\n    description: 'Detects authentication failures across multiple external threat intelligence APIs',\n    enabled: true,\n    conditions: {\n      patternType: 'unusual_patterns'\n    }\n  }\n];\n\nconst initialAgentState: AgentState = {\n  status: 'investigating',\n  currentInvestigation: createMockInvestigation('azure-ad-anomaly', mockAgentTriggers[1]),\n  recentInvestigations: [\n    createMockInvestigation('linkedin-auth-cascade', mockAgentTriggers[0]),\n    createMockInvestigation('github-threat-intel', mockAgentTriggers[2])\n  ],\n  triggers: mockAgentTriggers,\n  findings: [],\n  activityLog: [],\n  lastActivity: new Date(),\n  investigationsToday: 5,\n  meanTimeToResolution: 12.3\n};\n\n// Real-time simulation scenarios for MSTIC demo\nconst realtimeSimulationScenarios = [\n  {\n    id: 'linkedin-oauth-failure',\n    title: 'LinkedIn OAuth Token Cascade Failure',\n    severity: 'critical' as const,\n    steps: [\n      {\n        type: 'alert' as const,\n        message: 'ALERT: LinkedIn TI Pipeline Authentication Failed',\n        details: 'OAuth token expired affecting 12 threat intelligence pipelines',\n        icon: '🚨',\n        delay: 0\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Agent investigating authentication patterns...',\n        details: 'Analyzing OAuth token lifecycle and failure correlation',\n        icon: '🔍',\n        delay: 2000\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Correlating with APT28 monitoring pipeline',\n        details: 'Checking impact on Lazarus Group threat actor tracking',\n        icon: '🔗',\n        delay: 3500\n      },\n      {\n        type: 'action' as const,\n        message: 'Agent querying token management service',\n        details: 'SELECT * FROM oauth_tokens WHERE provider=\"linkedin\" AND status=\"expired\"',\n        icon: '💾',\n        delay: 5000\n      },\n      {\n        type: 'action' as const,\n        message: 'Checking backup authentication credentials',\n        details: 'Validating secondary OAuth apps for failover',\n        icon: '🔑',\n        delay: 6500\n      },\n      {\n        type: 'action' as const,\n        message: 'Agent sending Slack alert to MSTIC team',\n        details: '#mstic-alerts: LinkedIn TI collection DOWN - OAuth cascade failure detected',\n        icon: '💬',\n        delay: 8000\n      },\n      {\n        type: 'action' as const,\n        message: 'Deploying backup OAuth credentials',\n        details: 'Activating linkedin-backup-app-2 with fresh token rotation',\n        icon: '⚡',\n        delay: 9500\n      },\n      {\n        type: 'resolution' as const,\n        message: 'TI collection restored - 847 C2 domains now processing',\n        details: 'APT28 and Lazarus Group monitoring resumed. ETA to full sync: 8 minutes',\n        icon: '✅',\n        delay: 11000\n      }\n    ]\n  },\n  {\n    id: 'azure-ad-performance',\n    title: 'Azure AD Graph API Performance Crisis',\n    severity: 'critical' as const,\n    steps: [\n      {\n        type: 'alert' as const,\n        message: 'CRITICAL: Azure AD Graph API 400% latency spike',\n        details: 'Sign-in analysis pipeline severely degraded - 12,847 events backlogged',\n        icon: '🚨',\n        delay: 0\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Agent analyzing API response times...',\n        details: 'Baseline: 0.6s → Current: 2.3s avg response time',\n        icon: '📊',\n        delay: 2500\n      },\n      {\n        type: 'action' as const,\n        message: 'Querying Azure Service Health API',\n        details: 'GET /servicehealth/issues?service=AzureActiveDirectory',\n        icon: '🌐',\n        delay: 4000\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Checking impossible travel detection pipeline',\n        details: 'Nation-state attribution delayed by 45+ minutes',\n        icon: '🛡️',\n        delay: 5500\n      },\n      {\n        type: 'action' as const,\n        message: 'Implementing request batching optimization',\n        details: 'Reducing API calls from 1,200/min to 300/min via batching',\n        icon: '⚙️',\n        delay: 7000\n      },\n      {\n        type: 'action' as const,\n        message: 'Scaling Azure Functions horizontally',\n        details: 'Deploying 8 additional instances for parallel processing',\n        icon: '🚀',\n        delay: 8500\n      },\n      {\n        type: 'action' as const,\n        message: 'Activating backup Office 365 audit pipeline',\n        details: 'Switching to O365 Management API for sign-in analysis',\n        icon: '🔄',\n        delay: 10000\n      },\n      {\n        type: 'action' as const,\n        message: 'Sending Teams notification to Azure Support',\n        details: 'Escalating to Microsoft: Premium Graph API quota increase requested',\n        icon: '📞',\n        delay: 11500\n      },\n      {\n        type: 'resolution' as const,\n        message: 'Performance restored - Processing backlog cleared',\n        details: 'Latency: 0.8s avg. Impossible travel detection back online.',\n        icon: '✅',\n        delay: 13000\n      }\n    ]\n  },\n  {\n    id: 'github-malware-intel',\n    title: 'GitHub Malware Collection Rate Limit Crisis',\n    severity: 'warning' as const,\n    steps: [\n      {\n        type: 'alert' as const,\n        message: 'WARNING: GitHub API rate limit exhausted',\n        details: 'Malware repository monitoring stopped - 234 repos pending analysis',\n        icon: '⚠️',\n        delay: 0\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Agent checking GitHub API quota usage',\n        details: 'Rate limit: 5000/5000 requests used in current hour',\n        icon: '📈',\n        delay: 2000\n      },\n      {\n        type: 'action' as const,\n        message: 'Querying malware repo database for priorities',\n        details: 'SELECT repo_url FROM malware_repos WHERE confidence > 0.9 ORDER BY last_commit DESC',\n        icon: '🗄️',\n        delay: 3500\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Analyzing 15 new malware families discovered',\n        details: 'C2 framework detection pipeline 8 hours behind schedule',\n        icon: '🔬',\n        delay: 5000\n      },\n      {\n        type: 'action' as const,\n        message: 'Deploying backup GitHub Apps with fresh quotas',\n        details: 'Activating github-malware-scanner-backup with 5000 requests',\n        icon: '🔧',\n        delay: 6500\n      },\n      {\n        type: 'action' as const,\n        message: 'Implementing intelligent sampling algorithm',\n        details: 'Prioritizing high-confidence repos, deferring low-risk analysis',\n        icon: '🧠',\n        delay: 8000\n      },\n      {\n        type: 'action' as const,\n        message: 'Sending email alert to DevOps team',\n        details: 'To: devops@mstic.microsoft.com - GitHub quota management review needed',\n        icon: '📧',\n        delay: 9500\n      },\n      {\n        type: 'resolution' as const,\n        message: 'Malware collection resumed with smart prioritization',\n        details: 'High-priority repos processing. Next quota reset in 47 minutes.',\n        icon: '✅',\n        delay: 11000\n      }\n    ]\n  },\n  {\n    id: 'cross-platform-auth',\n    title: 'Multi-Platform Authentication Anomaly',\n    severity: 'warning' as const,\n    steps: [\n      {\n        type: 'alert' as const,\n        message: 'ANOMALY: Cross-platform auth failures detected',\n        details: 'Twitter, LinkedIn, GitHub APIs showing coordinated auth issues',\n        icon: '🔐',\n        delay: 0\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Agent correlating failure patterns across platforms',\n        details: 'Temporal correlation suggests shared infrastructure issue',\n        icon: '🕸️',\n        delay: 2000\n      },\n      {\n        type: 'action' as const,\n        message: 'Checking auth service logs',\n        details: 'grep \"authentication_failed\" /var/log/auth-service/*.log | tail -100',\n        icon: '📋',\n        delay: 3500\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Analyzing DNS resolution for API endpoints',\n        details: 'Testing connectivity to api.twitter.com, api.linkedin.com, api.github.com',\n        icon: '🌍',\n        delay: 5000\n      },\n      {\n        type: 'action' as const,\n        message: 'Running network diagnostics',\n        details: 'traceroute and latency tests to external API endpoints',\n        icon: '🔌',\n        delay: 6500\n      },\n      {\n        type: 'action' as const,\n        message: 'Deduplicating alerts to prevent noise',\n        details: 'Grouping 47 related auth failures into single incident',\n        icon: '🎯',\n        delay: 8000\n      },\n      {\n        type: 'resolution' as const,\n        message: 'Network issue resolved - APIs responding normally',\n        details: 'ISP routing fixed. All authentication services restored.',\n        icon: '✅',\n        delay: 9500\n      }\n    ]\n  },\n  {\n    id: 'threat-actor-surge',\n    title: 'Threat Actor Data Surge Overload',\n    severity: 'warning' as const,\n    steps: [\n      {\n        type: 'alert' as const,\n        message: 'CAPACITY: Threat actor data surge detected',\n        details: 'Processing pipeline 300% above normal - APT campaign suspected',\n        icon: '📈',\n        delay: 0\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Agent analyzing data volume patterns',\n        details: 'LinkedIn profiles: +2,847 suspicious accounts, GitHub: +156 malware repos',\n        icon: '📊',\n        delay: 2000\n      },\n      {\n        type: 'action' as const,\n        message: 'Scaling Kubernetes pods for data processing',\n        details: 'kubectl scale deployment threat-processor --replicas=12',\n        icon: '☸️',\n        delay: 3500\n      },\n      {\n        type: 'investigation' as const,\n        message: 'Correlating with MITRE ATT&CK frameworks',\n        details: 'Pattern matches T1566 (Phishing), T1583 (Acquire Infrastructure)',\n        icon: '🎯',\n        delay: 5000\n      },\n      {\n        type: 'action' as const,\n        message: 'Implementing data prioritization algorithm',\n        details: 'Processing high-confidence threats first, deferring noise',\n        icon: '🔢',\n        delay: 6500\n      },\n      {\n        type: 'action' as const,\n        message: 'Alert SOC team via Microsoft Teams',\n        details: 'Potential APT campaign detected - requesting analyst review',\n        icon: '👥',\n        delay: 8000\n      },\n      {\n        type: 'resolution' as const,\n        message: 'Surge processed - 23 high-confidence threats identified',\n        details: 'APT campaign confirmed. Intel forwarded to threat hunting team.',\n        icon: '✅',\n        delay: 9500\n      }\n    ]\n  }\n];\n\nconst AutonomousAgent: React.FC = () => {\n  const [agentState, setAgentState] = useState<AgentState>(initialAgentState);\n  const [selectedView, setSelectedView] = useState<'status' | 'investigation' | 'findings' | 'activity' | 'config' | 'demo' | 'realtime'>('realtime');\n  const [isInvestigating, setIsInvestigating] = useState(false);\n  const [showHowItWorks, setShowHowItWorks] = useState(false);\n  const [selectedScenario, setSelectedScenario] = useState<string>('azure-ad-anomaly');\n  const [simulationRunning, setSimulationRunning] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [simulationLogs, setSimulationLogs] = useState<Array<{\n    id: string;\n    timestamp: string;\n    type: 'alert' | 'investigation' | 'action' | 'resolution';\n    message: string;\n    details?: string;\n    severity?: 'critical' | 'warning' | 'info' | 'success';\n    icon?: string;\n  }>>([]);\n\n  // Trigger a new investigation using the AI service\n  const triggerInvestigation = useCallback(async (trigger: AgentTrigger) => {\n    setIsInvestigating(true);\n    setAgentState(prev => ({ ...prev, status: 'investigating' }));\n\n    try {\n      const investigation = await aiService.investigateAnomalies(\n        mockPipelines,\n        mockAlerts,\n        trigger.conditions.patternType || 'multiple_failures'\n      );\n\n      const newInvestigation: Investigation = {\n        id: `investigation-${Date.now()}`,\n        startTime: new Date(),\n        status: 'active',\n        trigger,\n        triggerData: { failedPipelines: mockPipelines.filter(p => p.status === 'failed').length },\n        steps: investigation.steps,\n        findings: investigation.findings,\n        summary: investigation.summary,\n        recommendations: investigation.recommendations,\n        affectedPipelines: investigation.findings.flatMap(f => f.affectedPipelines),\n        estimatedImpact: {\n          severity: 'high',\n          affectedSources: [...new Set(mockPipelines.filter(p => p.status === 'failed').map(p => p.source))],\n          estimatedDowntime: 25\n        }\n      };\n\n      setAgentState(prev => ({\n        ...prev,\n        status: 'reporting',\n        currentInvestigation: newInvestigation,\n        recentInvestigations: [newInvestigation, ...prev.recentInvestigations.slice(0, 4)],\n        investigationsToday: prev.investigationsToday + 1,\n        lastActivity: new Date()\n      }));\n\n    } catch (error) {\n      console.error('Investigation failed:', error);\n      setAgentState(prev => ({ ...prev, status: 'idle' }));\n    } finally {\n      setIsInvestigating(false);\n    }\n  }, []);\n\n  // Simulate autonomous triggering\n  useEffect(() => {\n    const checkForAnomalies = () => {\n      const failedPipelines = mockPipelines.filter(p => p.status === 'failed');\n      const enabledTriggers = agentState.triggers.filter(t => t.enabled);\n\n      // Check if any triggers should fire\n      for (const trigger of enabledTriggers) {\n        if (trigger.conditions.failureThreshold && failedPipelines.length >= trigger.conditions.failureThreshold) {\n          if (!agentState.currentInvestigation && !isInvestigating) {\n            console.log(`Autonomous trigger activated: ${trigger.name}`);\n            triggerInvestigation(trigger);\n            break;\n          }\n        }\n      }\n    };\n\n    const interval = setInterval(checkForAnomalies, 10000); // Check every 10 seconds\n    return () => clearInterval(interval);\n  }, [agentState.triggers, agentState.currentInvestigation, isInvestigating, triggerInvestigation]);\n\n  // Simulate real-time agent activity\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAgentState(prev => {\n        if (prev.status === 'investigating' && prev.currentInvestigation) {\n          // Simulate investigation progress\n          const investigation = prev.currentInvestigation;\n          const incompleteSteps = investigation.steps.filter(s => s.status === 'in_progress');\n          \n          if (incompleteSteps.length > 0) {\n            const updatedSteps = investigation.steps.map(step => \n              step.status === 'in_progress' ? { ...step, status: 'completed' as const } : step\n            );\n            \n            return {\n              ...prev,\n              currentInvestigation: {\n                ...investigation,\n                steps: updatedSteps\n              },\n              lastActivity: new Date()\n            };\n          }\n        }\n        return prev;\n      });\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Real-time simulation functions\n  const runRealtimeSimulation = useCallback((scenarioId: string) => {\n    const scenario = realtimeSimulationScenarios.find(s => s.id === scenarioId);\n    if (!scenario) return;\n\n    setSimulationRunning(true);\n    setSimulationLogs([]);\n    setCurrentStep(0);\n\n    scenario.steps.forEach((step, index) => {\n      setTimeout(() => {\n        const logEntry = {\n          id: `${scenario.id}-${index}`,\n          timestamp: new Date().toLocaleTimeString('en-US', { \n            hour12: false, \n            hour: '2-digit', \n            minute: '2-digit',\n            second: '2-digit'\n          }),\n          type: step.type,\n          message: step.message,\n          details: step.details,\n          severity: scenario.severity,\n          icon: step.icon\n        };\n\n        setSimulationLogs(prev => [...prev, logEntry]);\n        setCurrentStep(index + 1);\n\n        // Mark simulation as complete when last step is reached\n        if (index === scenario.steps.length - 1) {\n          setTimeout(() => setSimulationRunning(false), 1000);\n        }\n      }, step.delay);\n    });\n  }, []);\n\n  const clearSimulation = () => {\n    setSimulationLogs([]);\n    setSimulationRunning(false);\n    setCurrentStep(0);\n  };\n\n  const getStatusIcon = () => {\n    switch (agentState.status) {\n      case 'idle': return <Clock className={styles.statusIcon} />;\n      case 'investigating': return <Search className={styles.statusIcon} />;\n      case 'reporting': return <FileText className={styles.statusIcon} />;\n      case 'monitoring': return <Activity className={styles.statusIcon} />;\n      default: return <Brain className={styles.statusIcon} />;\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', { \n      hour12: false, \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const renderStatusOverview = () => (\n    <div className={styles.statusOverview}>\n      <div className={styles.statusHeader}>\n        <div className={styles.agentStatus}>\n          {getStatusIcon()}\n          <span className={styles.statusText}>\n            {agentState.status.charAt(0).toUpperCase() + agentState.status.slice(1)}\n          </span>\n        </div>\n        <div className={styles.metrics}>\n          <div className={styles.metric}>\n            <span className={styles.metricLabel}>Investigations Today</span>\n            <span className={styles.metricValue}>{agentState.investigationsToday}</span>\n          </div>\n          <div className={styles.metric}>\n            <span className={styles.metricLabel}>Mean Resolution Time</span>\n            <span className={styles.metricValue}>{agentState.meanTimeToResolution}m</span>\n          </div>\n        </div>\n      </div>\n\n      {agentState.currentInvestigation && (\n        <div className={styles.currentInvestigation}>\n          <h3>Current Investigation</h3>\n          <div className={styles.investigationCard}>\n            <div className={styles.investigationHeader}>\n              <h4>{agentState.currentInvestigation.trigger.name}</h4>\n              <span className={styles.investigationTime}>\n                Started: {formatTime(agentState.currentInvestigation.startTime)}\n              </span>\n            </div>\n            <div className={styles.investigationProgress}>\n              <div className={styles.progressBar}>\n                <div \n                  className={styles.progressFill}\n                  style={{ \n                    width: `${(agentState.currentInvestigation.steps.filter(s => s.status === 'completed').length / agentState.currentInvestigation.steps.length) * 100}%` \n                  }}\n                />\n              </div>\n              <span className={styles.progressText}>\n                {agentState.currentInvestigation.steps.filter(s => s.status === 'completed').length} / {agentState.currentInvestigation.steps.length} steps completed\n              </span>\n            </div>\n            <div className={styles.affectedPipelines}>\n              <AlertTriangle size={16} />\n              <span>{agentState.currentInvestigation.affectedPipelines.length} pipelines affected</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.recentFindings}>\n        <h3>Recent Findings</h3>\n        {agentState.currentInvestigation?.findings.slice(0, 3).map(finding => (\n          <div key={finding.id} className={styles.findingCard}>\n            <div className={styles.findingHeader}>\n              <span className={`${styles.findingType} ${styles[finding.type]}`}>\n                {finding.type.toUpperCase()}\n              </span>\n              <span className={`${styles.severity} ${styles[finding.severity]}`}>\n                {finding.severity.toUpperCase()}\n              </span>\n            </div>\n            <h4>{finding.title}</h4>\n            <p>{finding.description}</p>\n            <div className={styles.confidence}>\n              Confidence: {finding.confidence}%\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderInvestigationDetails = () => (\n    <div className={styles.investigationDetails}>\n      {agentState.currentInvestigation ? (\n        <>\n          <div className={styles.investigationSummary}>\n            <h3>Investigation Details</h3>\n            <div className={styles.summaryCard}>\n              <h4>{agentState.currentInvestigation.trigger.name}</h4>\n              <p className={styles.summary}>{agentState.currentInvestigation.summary}</p>\n              \n              <div className={styles.recommendations}>\n                <h5>Recommended Actions:</h5>\n                <ul>\n                  {agentState.currentInvestigation.recommendations.map((rec, idx) => (\n                    <li key={idx}>{rec}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.investigationSteps}>\n            <h3>Investigation Steps</h3>\n            {agentState.currentInvestigation.steps.map(step => (\n              <div key={step.id} className={`${styles.stepCard} ${styles[step.status]}`}>\n                <div className={styles.stepHeader}>\n                  <span className={styles.stepTime}>{formatTime(step.timestamp)}</span>\n                  <span className={styles.stepStatus}>\n                    {step.status === 'completed' && <CheckCircle size={16} />}\n                    {step.status === 'in_progress' && <Clock size={16} />}\n                    {step.status === 'failed' && <AlertTriangle size={16} />}\n                  </span>\n                </div>\n                <h4>{step.action}</h4>\n                <p>{step.details}</p>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : (\n        <div className={styles.noInvestigation}>\n          <Brain size={64} />\n          <h3>No Active Investigation</h3>\n          <p>Agent is monitoring for anomalies and patterns</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderFindings = () => (\n    <div className={styles.findingsView}>\n      <h3>Investigation Findings</h3>\n      {agentState.currentInvestigation?.findings.map(finding => (\n        <div key={finding.id} className={styles.detailedFinding}>\n          <div className={styles.findingMeta}>\n            <span className={`${styles.findingType} ${styles[finding.type]}`}>\n              {finding.type.toUpperCase()}\n            </span>\n            <span className={`${styles.severity} ${styles[finding.severity]}`}>\n              {finding.severity.toUpperCase()}\n            </span>\n            <span className={styles.confidence}>\n              {finding.confidence}% confidence\n            </span>\n          </div>\n          <h4>{finding.title}</h4>\n          <p>{finding.description}</p>\n          \n          <div className={styles.evidence}>\n            <h5>Evidence:</h5>\n            <ul>\n              {finding.evidence.map((evidence, idx) => (\n                <li key={idx}>{evidence}</li>\n              ))}\n            </ul>\n          </div>\n\n          <div className={styles.suggestedActions}>\n            <h5>Suggested Actions:</h5>\n            <ul>\n              {finding.suggestedActions.map((action, idx) => (\n                <li key={idx}>{action}</li>\n              ))}\n            </ul>\n          </div>\n\n          <div className={styles.affectedCount}>\n            <Users size={16} />\n            <span>{finding.affectedPipelines.length} pipelines affected</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderActivityLog = () => (\n    <div className={styles.activityLog}>\n      <h3>Agent Activity Log</h3>\n      <div className={styles.logEntries}>\n        {agentState.currentInvestigation?.steps.map(step => (\n          <div key={step.id} className={styles.logEntry}>\n            <span className={styles.timestamp}>{formatTime(step.timestamp)}</span>\n            <span className={styles.action}>{step.action}</span>\n            <span className={`${styles.status} ${styles[step.status]}`}>\n              {step.status.toUpperCase()}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Demo scenario handler\n  const loadDemoScenario = (scenarioId: string) => {\n    setSelectedScenario(scenarioId);\n    const scenario = createMockInvestigation(scenarioId, mockAgentTriggers[0]);\n    setAgentState(prev => ({\n      ...prev,\n      currentInvestigation: scenario,\n      status: 'investigating'\n    }));\n  };\n\n  const renderDemoScenarios = () => (\n    <div className={styles.demoScenarios}>\n      <div className={styles.demoHeader}>\n        <h3>MSTIC Threat Intelligence Pipeline - Live Demo Scenarios</h3>\n        <p>Interactive demonstration of autonomous agent handling real-world MSTIC alert scenarios</p>\n      </div>\n      \n      <div className={styles.scenarioGrid}>\n        <div \n          className={`${styles.scenarioCard} ${selectedScenario === 'azure-ad-anomaly' ? styles.active : ''}`}\n          onClick={() => loadDemoScenario('azure-ad-anomaly')}\n        >\n          <div className={styles.scenarioHeader}>\n            <AlertTriangle className={styles.scenarioIcon} />\n            <h4>Azure AD Performance Crisis</h4>\n            <span className={styles.severity}>CRITICAL</span>\n          </div>\n          <p><strong>Scenario:</strong> Graph API 400% latency spike affecting threat detection</p>\n          <div className={styles.scenarioDetails}>\n            <span>• Impossible travel detection delayed 45min</span>\n            <span>• 12,847 sign-in events in backlog</span>\n            <span>• Nation-state attribution pipeline down</span>\n          </div>\n          <div className={styles.scenarioTech}>\n            <span>Azure Graph API</span>\n            <span>Sign-in Analytics</span>\n            <span>MITRE ATT&CK</span>\n          </div>\n        </div>\n\n        <div \n          className={`${styles.scenarioCard} ${selectedScenario === 'linkedin-auth-cascade' ? styles.active : ''}`}\n          onClick={() => loadDemoScenario('linkedin-auth-cascade')}\n        >\n          <div className={styles.scenarioHeader}>\n            <Clock className={styles.scenarioIcon} />\n            <h4>LinkedIn TI Collection Failure</h4>\n            <span className={styles.severity}>HIGH</span>\n          </div>\n          <p><strong>Scenario:</strong> OAuth token expiration causing threat intelligence blackout</p>\n          <div className={styles.scenarioDetails}>\n            <span>• APT28, Lazarus Group monitoring down</span>\n            <span>• 847 C2 domains unanalyzed</span>\n            <span>• EU region 89% failure rate</span>\n          </div>\n          <div className={styles.scenarioTech}>\n            <span>OAuth 2.0</span>\n            <span>LinkedIn API</span>\n            <span>Threat Actor Tracking</span>\n          </div>\n        </div>\n\n        <div \n          className={`${styles.scenarioCard} ${selectedScenario === 'github-threat-intel' ? styles.active : ''}`}\n          onClick={() => loadDemoScenario('github-threat-intel')}\n        >\n          <div className={styles.scenarioHeader}>\n            <Search className={styles.scenarioIcon} />\n            <h4>GitHub Malware Collection Down</h4>\n            <span className={styles.severity}>HIGH</span>\n          </div>\n          <p><strong>Scenario:</strong> Rate limit exhaustion halting malware intelligence</p>\n          <div className={styles.scenarioDetails}>\n            <span>• 234 malware repos unmonitored</span>\n            <span>• 15 new malware families missed</span>\n            <span>• C2 framework detection 8h behind</span>\n          </div>\n          <div className={styles.scenarioTech}>\n            <span>GitHub API</span>\n            <span>Malware Analysis</span>\n            <span>IOC Extraction</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.demoExplanation}>\n        <h4>How This Demonstrates MSTIC Capabilities:</h4>\n        <div className={styles.capabilityGrid}>\n          <div className={styles.capability}>\n            <TrendingUp className={styles.capabilityIcon} />\n            <h5>Real-time Threat Intelligence</h5>\n            <p>Monitors 160+ pipelines collecting data from LinkedIn, Twitter, GitHub, Azure AD for threat actor tracking, malware analysis, and C2 infrastructure discovery</p>\n          </div>\n          <div className={styles.capability}>\n            <Brain className={styles.capabilityIcon} />\n            <h5>Autonomous Investigation</h5>\n            <p>AI agent automatically correlates failures, identifies root causes, and provides actionable remediation steps based on historical patterns and MSTIC expertise</p>\n          </div>\n          <div className={styles.capability}>\n            <CheckCircle className={styles.capabilityIcon} />\n            <h5>Operational Resilience</h5>\n            <p>Implements circuit breakers, regional failover, and backup systems to ensure continuous threat intelligence collection for national security operations</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderConfiguration = () => (\n    <div className={styles.configuration}>\n      <h3>Agent Configuration</h3>\n      <div className={styles.triggers}>\n        <h4>Investigation Triggers</h4>\n        {agentState.triggers.map(trigger => (\n          <div key={trigger.id} className={styles.triggerCard}>\n            <div className={styles.triggerHeader}>\n              <h5>{trigger.name}</h5>\n              <label className={styles.toggle}>\n                <input \n                  type=\"checkbox\" \n                  checked={trigger.enabled}\n                  onChange={() => {\n                    setAgentState(prev => ({\n                      ...prev,\n                      triggers: prev.triggers.map(t => \n                        t.id === trigger.id ? { ...t, enabled: !t.enabled } : t\n                      )\n                    }));\n                  }}\n                />\n                <span className={styles.slider}></span>\n              </label>\n            </div>\n            <p>{trigger.description}</p>\n            <div className={styles.triggerConditions}>\n              {trigger.conditions.failureThreshold && (\n                <span>Threshold: {trigger.conditions.failureThreshold} failures</span>\n              )}\n              {trigger.conditions.timeWindow && (\n                <span>Window: {trigger.conditions.timeWindow} minutes</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderRealtimeSimulation = () => (\n    <div className={styles.realtimeSimulation}>\n      <div className={styles.realtimeHeader}>\n        <h3>🚀 MSTIC Real-Time Agent Demonstration</h3>\n        <p>Watch the AI agent handle live threat intelligence pipeline alerts in real-time</p>\n        <div className={styles.interviewNote}>\n          <strong>For Microsoft Interview:</strong> This demonstrates data troubleshooting, automation, and infrastructure monitoring skills\n        </div>\n      </div>\n\n      <div className={styles.scenarioSelector}>\n        <h4>Select a Live Scenario:</h4>\n        <div className={styles.scenarioButtons}>\n          {realtimeSimulationScenarios.map(scenario => (\n            <button\n              key={scenario.id}\n              className={`${styles.scenarioButton} ${styles[scenario.severity]}`}\n              onClick={() => runRealtimeSimulation(scenario.id)}\n              disabled={simulationRunning}\n            >\n              <span className={styles.scenarioTitle}>{scenario.title}</span>\n              <span className={styles.scenarioSeverity}>{scenario.severity.toUpperCase()}</span>\n            </button>\n          ))}\n        </div>\n        {simulationLogs.length > 0 && (\n          <button \n            className={styles.clearButton}\n            onClick={clearSimulation}\n            disabled={simulationRunning}\n          >\n            Clear Logs\n          </button>\n        )}\n      </div>\n\n      <div className={styles.simulationConsole}>\n        <div className={styles.consoleHeader}>\n          <h4>🖥️ Live Agent Console</h4>\n          {simulationRunning && (\n            <div className={styles.runningIndicator}>\n              <div className={styles.pulse}></div>\n              SIMULATION RUNNING\n              {currentStep > 0 && (\n                <span className={styles.stepProgress}>\n                  Step {currentStep} / {realtimeSimulationScenarios.find(s => \n                    simulationLogs.length > 0 && simulationLogs[0].id.startsWith(s.id)\n                  )?.steps.length || 0}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n        \n        <div className={styles.logContainer}>\n          {simulationLogs.map((log, index) => (\n            <div \n              key={log.id} \n              className={`${styles.logEntry} ${styles[log.type]} ${simulationLogs.length - 1 === index ? styles.latest : ''}`}\n            >\n              <div className={styles.logTimestamp}>[{log.timestamp}]</div>\n              <div className={styles.logIcon}>{log.icon}</div>\n              <div className={styles.logContent}>\n                <div className={styles.logMessage}>{log.message}</div>\n                {log.details && <div className={styles.logDetails}>{log.details}</div>}\n              </div>\n              <div className={`${styles.logType} ${styles[log.type]}`}>\n                {log.type.toUpperCase()}\n              </div>\n            </div>\n          ))}\n          \n          {simulationLogs.length === 0 && (\n            <div className={styles.emptyConsole}>\n              <div className={styles.emptyMessage}>\n                <Brain size={48} />\n                <h4>Agent Ready</h4>\n                <p>Select a scenario above to see the AI agent in action</p>\n                <div className={styles.capabilities}>\n                  <span>🔍 Real-time Investigation</span>\n                  <span>🗄️ Database Queries</span>\n                  <span>📊 Log Analysis</span>\n                  <span>💬 Team Notifications</span>\n                  <span>⚡ Auto-remediation</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.technicalSkills}>\n        <h4>🎯 Skills Demonstrated:</h4>\n        <div className={styles.skillsGrid}>\n          <div className={styles.skill}>\n            <strong>Data Troubleshooting:</strong> Real-time pipeline diagnosis, performance analysis, root cause identification\n          </div>\n          <div className={styles.skill}>\n            <strong>Infrastructure Monitoring:</strong> API health checks, service scaling, resource optimization\n          </div>\n          <div className={styles.skill}>\n            <strong>Database Operations:</strong> Query optimization, log analysis, data correlation across systems\n          </div>\n          <div className={styles.skill}>\n            <strong>Automation & Scripts:</strong> Automated remediation, intelligent alerting, workflow orchestration\n          </div>\n          <div className={styles.skill}>\n            <strong>Communication:</strong> Slack/Teams integration, email alerts, incident escalation procedures\n          </div>\n          <div className={styles.skill}>\n            <strong>Adaptability:</strong> Multi-platform integration, backup systems, intelligent priority handling\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={styles.autonomousAgent}>\n      <div className={styles.header}>\n        <div className={styles.titleSection}>\n          <Brain className={styles.headerIcon} />\n          <div>\n            <h1>Autonomous Investigation Agent</h1>\n            <p>AI-powered threat intelligence pipeline monitoring and investigation</p>\n          </div>\n        </div>\n        <div className={styles.headerActions}>\n          <button \n            className={styles.howItWorksButton}\n            onClick={() => setShowHowItWorks(true)}\n            title=\"Learn how this system works\"\n          >\n            <HelpCircle size={16} />\n            How does it work?\n          </button>\n          <div className={styles.agentIndicator}>\n            <div className={`${styles.statusDot} ${styles[agentState.status]}`}></div>\n            <span>Last activity: {formatTime(agentState.lastActivity)}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.navigation}>\n        <button \n          className={selectedView === 'realtime' ? styles.active : ''}\n          onClick={() => setSelectedView('realtime')}\n        >\n          <Activity size={16} />\n          Real-time Demo\n        </button>\n        <button \n          className={selectedView === 'demo' ? styles.active : ''}\n          onClick={() => setSelectedView('demo')}\n        >\n          <TrendingUp size={16} />\n          Scenarios\n        </button>\n        <button \n          className={selectedView === 'status' ? styles.active : ''}\n          onClick={() => setSelectedView('status')}\n        >\n          <Brain size={16} />\n          Status\n        </button>\n        <button \n          className={selectedView === 'investigation' ? styles.active : ''}\n          onClick={() => setSelectedView('investigation')}\n        >\n          <Search size={16} />\n          Investigation\n        </button>\n        <button \n          className={selectedView === 'findings' ? styles.active : ''}\n          onClick={() => setSelectedView('findings')}\n        >\n          <CheckCircle size={16} />\n          Findings\n        </button>\n        <button \n          className={selectedView === 'activity' ? styles.active : ''}\n          onClick={() => setSelectedView('activity')}\n        >\n          <FileText size={16} />\n          Activity Log\n        </button>\n      </div>\n\n      <div className={styles.content}>\n        {selectedView === 'demo' && renderDemoScenarios()}\n        {selectedView === 'status' && renderStatusOverview()}\n        {selectedView === 'investigation' && renderInvestigationDetails()}\n        {selectedView === 'findings' && renderFindings()}\n        {selectedView === 'activity' && renderActivityLog()}\n        {selectedView === 'config' && renderConfiguration()}\n        {selectedView === 'realtime' && renderRealtimeSimulation()}\n      </div>\n      \n      <HowItWorksModal \n        isOpen={showHowItWorks}\n        onClose={() => setShowHowItWorks(false)}\n        section=\"autonomousAgent\"\n      />\n    </div>\n  );\n};\n\nexport default AutonomousAgent;\n"],"names":["_AutonomousInvestigationService","pipelines","_alerts","triggerType","resolve","failedPipelines","p","sourceGroups","timePatterns","groups","pipeline","source","times","minTime","maxTime","a","b","_timePatterns","_triggerType","findings","recommendations","failureCount","__publicField","AutonomousInvestigationService","aiService","createMockInvestigation","id","trigger","now","startTime","baseInvestigation","mockPipelines","_b","_a","_d","_c","_f","_e","mockAgentTriggers","initialAgentState","realtimeSimulationScenarios","AutonomousAgent","agentState","setAgentState","useState","selectedView","setSelectedView","isInvestigating","setIsInvestigating","showHowItWorks","setShowHowItWorks","selectedScenario","setSelectedScenario","simulationRunning","setSimulationRunning","currentStep","setCurrentStep","simulationLogs","setSimulationLogs","triggerInvestigation","useCallback","prev","investigation","mockAlerts","newInvestigation","f","error","useEffect","interval","enabledTriggers","t","s","updatedSteps","step","runRealtimeSimulation","scenarioId","scenario","index","logEntry","clearSimulation","getStatusIcon","jsx","Clock","styles","Search","FileText","Activity","Brain","formatTime","date","renderStatusOverview","jsxs","AlertTriangle","finding","renderInvestigationDetails","Fragment","rec","idx","CheckCircle","renderFindings","evidence","action","Users","renderActivityLog","loadDemoScenario","renderDemoScenarios","TrendingUp","renderConfiguration","renderRealtimeSimulation","log","HelpCircle","HowItWorksModal"],"mappings":"6dAGO,MAAMA,EAAN,MAAMA,CAA+B,CAG1C,OAAO,aAA8C,CAC/C,OAACA,EAA+B,WACHA,EAAA,SAAW,IAAIA,GAEzCA,EAA+B,QAAA,CAIxC,MAAM,qBACJC,EACAC,EACAC,EAMC,CAEK,MAAA,IAAI,QAAQC,GAAW,WAAWA,EAAS,IAAO,KAAK,SAAW,GAAI,CAAC,EAE7E,MAAMC,EAAkBJ,EAAU,OAAYK,GAAAA,EAAE,SAAW,QAAQ,EAG7DC,EAAe,KAAK,uBAAuBF,CAAe,EAC1DG,EAAe,KAAK,oBAAoBH,CAAe,EAKtD,MAAA,CACL,SAHe,KAAK,iBAAiBE,EAAcC,EAAcL,CAAW,EAI5E,QAAS,4BAA4BE,EAAgB,MAAM,yDAAyD,KAAK,oBAAoBE,CAAY,CAAC,IAC1J,gBAAiB,KAAK,wBAAwBA,EAAcJ,CAAW,EACvE,MAAO,KAAK,2BAA2BA,EAAaE,EAAgB,MAAM,CAC5E,CAAA,CAGM,uBAAuBJ,EAAmD,CAChF,OAAOA,EAAU,OAAO,CAACQ,EAAQC,IAAa,CAC5C,MAAMC,EAASD,EAAS,OACpB,OAACD,EAAOE,CAAM,IACTF,EAAAE,CAAM,EAAI,CAAC,GAEbF,EAAAE,CAAM,EAAE,KAAKD,CAAQ,EACrBD,CACT,EAAG,EAAgC,CAAA,CAG7B,oBAAoBR,EAA4B,CAChD,MAAAW,EAAQX,EAAU,IAASK,GAAA,IAAI,KAAKA,EAAE,OAAO,EAAE,SAAS,EACxDO,EAAU,KAAK,IAAI,GAAGD,CAAK,EAC3BE,EAAU,KAAK,IAAI,GAAGF,CAAK,EAE1B,MAAA,CACL,WAAYE,EAAUD,EACtB,UAAYC,EAAUD,EAAW,IACjC,YAAaD,EAAM,OAAO,CAACG,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIJ,EAAM,MACxD,CAAA,CAGM,iBAAiBL,EAA0CU,EAAoBC,EAA8C,CACnI,MAAMC,EAAmC,CAAC,EAG1C,OAAI,OAAO,KAAKZ,CAAY,EAAE,OAAS,GACrCY,EAAS,KAAK,CACZ,GAAI,WAAW,KAAK,IAAK,CAAA,GACzB,cAAe,KACf,KAAM,cACN,MAAO,yCACP,YAAa,sDAAsD,OAAO,KAAKZ,CAAY,EAAE,MAAM,iBACnG,WAAY,GACZ,SAAU,OACV,kBAAmB,OAAO,OAAOA,CAAY,EAAE,OAAO,IAASD,GAAAA,EAAE,EAAE,EACnE,SAAU,CACR,mDACA,sDACF,EACA,iBAAkB,CAChB,4CACA,uDAAA,CACF,CACD,EAGIa,CAAA,CAGD,oBAAoBZ,EAAkD,CAC5E,OAAI,OAAO,KAAKA,CAAY,EAAE,OAAS,EAC9B,2CACE,OAAO,KAAKA,CAAY,EAAE,SAAW,EACvC,qCAEA,gCACT,CAGM,wBAAwBA,EAA0CW,EAAgC,CACxG,MAAME,EAA4B,CAAC,EAEnC,OAAI,OAAO,KAAKb,CAAY,EAAE,OAAS,GACrCa,EAAgB,KAAK,mEAAmE,EACxFA,EAAgB,KAAK,kEAAkE,EACvFA,EAAgB,KAAK,0DAA0D,IAE/EA,EAAgB,KAAK,mDAAmD,EACxEA,EAAgB,KAAK,+CAA+C,EACpEA,EAAgB,KAAK,mDAAmD,GAGnEA,CAAA,CAGD,2BAA2BjB,EAAqBkB,EAA2C,CAC1F,MAAA,CACL,CACE,GAAI,QAAQ,KAAK,IAAK,CAAA,GACtB,cAAe,KACf,OAAQ,uBAAuBlB,CAAW,GAC1C,QAAS,YAAYkB,CAAY,+CACjC,OAAQ,YACR,KAAM,CAAE,OAAQ,0CAA2C,CAAA,CAE/D,CAAA,CAIF,uBAKG,CACM,MAAA,CACL,CACE,KAAM,aACN,QAAS,qDACT,WAAY,oCACZ,SAAU,YACZ,EACA,CACE,KAAM,aACN,QAAS,iCACT,WAAY,2BACZ,SAAU,WAAA,CAEd,CAAA,CAGF,MAAM,wBAA0D,CAE9D,aAAM,IAAI,QAAQjB,GAAW,WAAWA,EAAS,GAAG,CAAC,EAE9C,CACL,OAAQ,QAGV,CAAA,CAEJ,EAnKEkB,EADWtB,EACI,YADV,IAAMuB,EAANvB,EAsKM,MAAAwB,GAAYD,EAA+B,YAAY,o9KChK9DE,EAA0B,CAACC,EAAYC,IAAyC,iBAC9E,MAAAC,MAAU,KACVC,EAAY,IAAI,KAAKD,EAAI,QAAA,EAAY,KAAK,OAAO,EAAI,GAAK,GAAK,GAAI,EA4KnEE,EA1KyD,CAC7D,wBAAyB,CACvB,QAAS,CACP,GAAGH,EACH,KAAM,gDACN,WAAY,CAAE,iBAAkB,EAAG,WAAY,GAAI,YAAa,kBAAmB,CACrF,EACA,SAAU,CACR,CACE,GAAI,mBACJ,UAAW,IAAI,KAAKE,EAAU,UAAY,EAAI,GAAK,GAAI,EACvD,KAAM,UACN,MAAO,8DACP,YAAa,sLACb,WAAY,GACZ,SAAU,OACV,kBAAmBE,EAAc,OAAYzB,GAAAA,EAAE,KAAK,SAAS,UAAU,CAAC,EAAE,MAAM,EAAG,EAAE,EAAE,IAAIA,GAAKA,EAAE,EAAE,EACpG,SAAU,CACR,qEACA,0DACA,8EACA,oEACF,EACA,iBAAkB,CAChB,sEACA,yDACA,oDACA,4DAAA,CAEJ,EACA,CACE,GAAI,kBACJ,UAAW,IAAI,KAAKuB,EAAU,UAAY,EAAI,GAAK,GAAI,EACvD,KAAM,cACN,MAAO,0CACP,YAAa,gJACb,WAAY,GACZ,SAAU,OACV,kBAAmB,CAAC,EACpB,SAAU,CACR,8EACA,yDACA,2DACA,mEACF,EACA,iBAAkB,CAChB,iEACA,6DACA,6DAAA,CACF,CAEJ,EACA,QAAS;AAAA;AAAA;AAAA;AAAA,uEAKT,gBAAiB,CACf,oDACA,qEACA,0DACA,gFACA,kEAAA,CAEJ,EACA,mBAAoB,CAClB,QAAS,CACP,GAAGF,EACH,KAAM,gDACN,WAAY,CAAE,YAAa,yBAA0B,CACvD,EACA,SAAU,CACR,CACE,GAAI,mBACJ,UAAW,IAAI,KAAKE,EAAU,UAAY,EAAI,GAAK,GAAI,EACvD,KAAM,UACN,MAAO,qEACP,YAAa,gKACb,WAAY,GACZ,SAAU,OACV,kBAAmBE,EAAc,OAAOzB,GAAKA,EAAE,KAAK,SAAS,UAAU,CAAC,EAAE,IAAIA,GAAKA,EAAE,EAAE,EACvF,SAAU,CACR,mDACA,0DACA,8DACA,oDACA,+CACF,EACA,iBAAkB,CAChB,4DACA,uDACA,gDACA,sDAAA,CAEJ,EACA,CACE,GAAI,oBACJ,UAAW,IAAI,KAAKuB,EAAU,UAAY,EAAI,GAAK,GAAI,EACvD,KAAM,cACN,MAAO,qCACP,YAAa,qIACb,WAAY,GACZ,SAAU,OACV,kBAAmB,CAAC,EACpB,SAAU,CACR,kDACA,oDACA,0DACA,0DACA,uDACF,EACA,iBAAkB,CAChB,wDACA,+CACA,gDACA,mDAAA,CACF,CAEJ,EACA,QAAS;AAAA;AAAA;AAAA;AAAA,uFAKT,gBAAiB,CACf,kEACA,mEACA,4CACA,qDACA,uDACA,yDAAA,CAEJ,EACA,sBAAuB,CACrB,QAAS,CACP,GAAGF,EACH,KAAM,gDACN,WAAY,CAAE,YAAa,mBAAoB,CACjD,EACA,SAAU,CACR,CACE,GAAI,qBACJ,UAAW,IAAI,KAAKE,EAAU,UAAY,EAAI,GAAK,GAAI,EACvD,KAAM,UACN,MAAO,wDACP,YAAa,oIACb,WAAY,GACZ,SAAU,OACV,kBAAmBE,EAAc,OAAOzB,GAAKA,EAAE,KAAK,SAAS,QAAQ,CAAC,EAAE,IAAIA,GAAKA,EAAE,EAAE,EACrF,SAAU,CACR,2DACA,iDACA,0DACA,iDACA,8CACF,EACA,iBAAkB,CAChB,8DACA,0DACA,kDACA,wDAAA,CACF,CAEJ,EACA,QAAS;AAAA;AAAA,+EAAA,CAIb,EAEyCoB,CAAE,GAAK,CAAC,EAE1C,MAAA,CACL,GAAAA,EACA,UAAAG,EACA,OAAQ,SACR,QAAAF,EACA,YAAa,CAAE,gBAAiB,KAAK,MAAM,KAAK,OAAO,EAAI,EAAE,EAAI,CAAE,EACnE,MAAO,CACL,CACE,GAAI,SACJ,UAAW,IAAI,KAAKE,EAAU,QAAQ,EAAI,GAAK,GAAI,EACnD,OAAQ,yCACR,QAAS,cAAYG,GAAAC,EAAAH,EAAkB,UAAlB,YAAAG,EAA2B,aAA3B,YAAAD,EAAuC,mBAAoB,CAAC,8BAA4BE,GAAAC,EAAAL,EAAkB,UAAlB,YAAAK,EAA2B,aAA3B,YAAAD,EAAuC,aAAc,EAAE,WACpK,OAAQ,WACV,EACA,CACE,GAAI,SACJ,UAAW,IAAI,KAAKL,EAAU,QAAQ,EAAI,GAAK,GAAI,EACnD,OAAQ,6BACR,QAAS,2EACT,OAAQ,WACV,EACA,CACE,GAAI,SACJ,UAAW,IAAI,KAAKA,EAAU,QAAQ,EAAI,IAAM,GAAI,EACpD,OAAQ,mCACR,QAAS,6DACT,OAAQ,WACV,EACA,CACE,GAAI,SACJ,UAAW,IAAI,KAAKA,EAAU,QAAQ,EAAI,IAAM,GAAI,EACpD,OAAQ,kCACR,QAAS,6CACT,OAAQ,aAAA,CAEZ,EACA,SAAUC,EAAkB,UAAY,CAAC,EACzC,QAASA,EAAkB,QAC3B,gBAAiBA,EAAkB,iBAAmB,CAAC,EACvD,oBAAmBM,GAAAC,EAAAP,EAAkB,WAAlB,YAAAO,EAA6B,KAA7B,YAAAD,EAAiC,oBAAqB,CAAC,EAC1E,gBAAiB,CACf,SAAU,OACV,gBAAiB,CAAC,WAAY,SAAS,EACvC,kBAAmB,EACrB,EACA,GAAGN,CACL,CACF,EAEMQ,EAAoC,CACxC,CACE,GAAI,uBACJ,KAAM,iDACN,YAAa,iHACb,QAAS,GACT,WAAY,CACV,iBAAkB,EAClB,WAAY,GACZ,YAAa,kBAAA,CAEjB,EACA,CACE,GAAI,2BACJ,KAAM,uCACN,YAAa,qGACb,QAAS,GACT,WAAY,CACV,YAAa,yBAAA,CAEjB,EACA,CACE,GAAI,6BACJ,KAAM,0CACN,YAAa,+EACb,QAAS,GACT,WAAY,CACV,iBAAkB,EAClB,WAAY,GACZ,YAAa,mBAAA,CAEjB,EACA,CACE,GAAI,yBACJ,KAAM,wCACN,YAAa,oFACb,QAAS,GACT,WAAY,CACV,YAAa,kBAAA,CACf,CAEJ,EAEMC,GAAgC,CACpC,OAAQ,gBACR,qBAAsBd,EAAwB,mBAAoBa,EAAkB,CAAC,CAAC,EACtF,qBAAsB,CACpBb,EAAwB,wBAAyBa,EAAkB,CAAC,CAAC,EACrEb,EAAwB,sBAAuBa,EAAkB,CAAC,CAAC,CACrE,EACA,SAAUA,EACV,SAAU,CAAC,EACX,YAAa,CAAC,EACd,iBAAkB,KAClB,oBAAqB,EACrB,qBAAsB,IACxB,EAGME,EAA8B,CAClC,CACE,GAAI,yBACJ,MAAO,uCACP,SAAU,WACV,MAAO,CACL,CACE,KAAM,QACN,QAAS,oDACT,QAAS,iEACT,KAAM,KACN,MAAO,CACT,EACA,CACE,KAAM,gBACN,QAAS,iDACT,QAAS,0DACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,gBACN,QAAS,6CACT,QAAS,yDACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,0CACT,QAAS,4EACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,6CACT,QAAS,+CACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,0CACT,QAAS,8EACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,qCACT,QAAS,6DACT,KAAM,IACN,MAAO,IACT,EACA,CACE,KAAM,aACN,QAAS,yDACT,QAAS,0EACT,KAAM,IACN,MAAO,IAAA,CACT,CAEJ,EACA,CACE,GAAI,uBACJ,MAAO,wCACP,SAAU,WACV,MAAO,CACL,CACE,KAAM,QACN,QAAS,kDACT,QAAS,yEACT,KAAM,KACN,MAAO,CACT,EACA,CACE,KAAM,gBACN,QAAS,wCACT,QAAS,mDACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,oCACT,QAAS,yDACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,gBACN,QAAS,gDACT,QAAS,kDACT,KAAM,MACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,6CACT,QAAS,4DACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,uCACT,QAAS,2DACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,8CACT,QAAS,wDACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,8CACT,QAAS,sEACT,KAAM,KACN,MAAO,KACT,EACA,CACE,KAAM,aACN,QAAS,oDACT,QAAS,8DACT,KAAM,IACN,MAAO,IAAA,CACT,CAEJ,EACA,CACE,GAAI,uBACJ,MAAO,8CACP,SAAU,UACV,MAAO,CACL,CACE,KAAM,QACN,QAAS,2CACT,QAAS,qEACT,KAAM,KACN,MAAO,CACT,EACA,CACE,KAAM,gBACN,QAAS,wCACT,QAAS,sDACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,gDACT,QAAS,sFACT,KAAM,MACN,MAAO,IACT,EACA,CACE,KAAM,gBACN,QAAS,+CACT,QAAS,0DACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,iDACT,QAAS,8DACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,8CACT,QAAS,kEACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,qCACT,QAAS,yEACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,aACN,QAAS,uDACT,QAAS,kEACT,KAAM,IACN,MAAO,IAAA,CACT,CAEJ,EACA,CACE,GAAI,sBACJ,MAAO,wCACP,SAAU,UACV,MAAO,CACL,CACE,KAAM,QACN,QAAS,iDACT,QAAS,iEACT,KAAM,KACN,MAAO,CACT,EACA,CACE,KAAM,gBACN,QAAS,sDACT,QAAS,4DACT,KAAM,MACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,6BACT,QAAS,uEACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,gBACN,QAAS,6CACT,QAAS,4EACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,8BACT,QAAS,yDACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,wCACT,QAAS,yDACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,aACN,QAAS,oDACT,QAAS,2DACT,KAAM,IACN,MAAO,IAAA,CACT,CAEJ,EACA,CACE,GAAI,qBACJ,MAAO,mCACP,SAAU,UACV,MAAO,CACL,CACE,KAAM,QACN,QAAS,6CACT,QAAS,iEACT,KAAM,KACN,MAAO,CACT,EACA,CACE,KAAM,gBACN,QAAS,uCACT,QAAS,4EACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,8CACT,QAAS,0DACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,gBACN,QAAS,2CACT,QAAS,mEACT,KAAM,KACN,MAAO,GACT,EACA,CACE,KAAM,SACN,QAAS,6CACT,QAAS,4DACT,KAAM,KACN,MAAO,IACT,EACA,CACE,KAAM,SACN,QAAS,qCACT,QAAS,8DACT,KAAM,KACN,MAAO,GACT,EA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"}