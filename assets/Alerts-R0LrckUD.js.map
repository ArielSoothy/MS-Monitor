{"version":3,"file":"Alerts-R0LrckUD.js","sources":["../../src/components/AlertDetailsModal.tsx","../../src/pages/Alerts.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { \n  X, \n  AlertTriangle, \n  Calendar, \n  User, \n  Mail, \n  MessageSquare, \n  ExternalLink,\n  Copy,\n  CheckCircle,\n  Clock,\n  Database,\n  Users,\n  BookOpen,\n  Activity,\n  Eye\n} from 'lucide-react';\nimport type { Alert } from '../types';\nimport styles from './AlertDetailsModal.module.css';\n\ninterface AlertDetailsModalProps {\n  alert: Alert;\n  isOpen: boolean;\n  onClose: () => void;\n  onResolve: () => void;\n  onAcknowledge: () => void;\n}\n\nconst AlertDetailsModal = ({ alert, isOpen, onClose, onResolve, onAcknowledge }: AlertDetailsModalProps) => {\n  const [activeTab, setActiveTab] = useState<'overview' | 'logs' | 'troubleshooting' | 'contacts'>('overview');\n  const [copiedText, setCopiedText] = useState<string | null>(null);\n\n  if (!isOpen) return null;\n\n  const handleCopy = async (text: string, label: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(label);\n      setTimeout(() => setCopiedText(null), 3000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical': return '#ff4757';\n      case 'high': return '#ff6348';\n      case 'medium': return '#ffa502';\n      case 'low': return '#26de81';\n      default: return '#747d8c';\n    }\n  };\n\n  const formatDateTime = (date: Date) => {\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZoneName: 'short'\n    }).format(new Date(date));\n  };\n\n  return (\n    <>\n      {copiedText && (\n        <div className={styles.copiedFeedback}>\n          <CheckCircle size={16} />\n          Copied {copiedText} to clipboard!\n        </div>\n      )}\n      <div className={styles.modalOverlay} onClick={onClose}>\n      <div className={styles.modal} onClick={(e) => e.stopPropagation()}>\n        <div className={styles.modalHeader}>\n          <div className={styles.alertSummary}>\n            <AlertTriangle \n              size={24} \n              style={{ color: getSeverityColor(alert.severity) }}\n            />\n            <div className={styles.alertInfo}>\n              <h2 className={styles.alertTitle}>Alert Details</h2>\n              <div className={styles.alertMeta}>\n                <span className={`${styles.severityBadge} ${styles[alert.severity]}`}>\n                  {alert.severity.toUpperCase()}\n                </span>\n                <span className={styles.category}>{alert.category}</span>\n                <span className={styles.timestamp}>\n                  <Calendar size={14} />\n                  {formatDateTime(alert.timestamp)}\n                </span>\n              </div>\n            </div>\n          </div>\n          <button onClick={onClose} className={styles.closeButton}>\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className={styles.alertMessage}>\n          <p>{alert.message}</p>\n        </div>\n\n        <div className={styles.tabNavigation}>\n          <button \n            className={`${styles.tab} ${activeTab === 'overview' ? styles.activeTab : ''}`}\n            onClick={() => setActiveTab('overview')}\n          >\n            <Eye size={16} />\n            Overview\n          </button>\n          <button \n            className={`${styles.tab} ${activeTab === 'logs' ? styles.activeTab : ''}`}\n            onClick={() => setActiveTab('logs')}\n          >\n            <Database size={16} />\n            Logs & Context\n          </button>\n          <button \n            className={`${styles.tab} ${activeTab === 'troubleshooting' ? styles.activeTab : ''}`}\n            onClick={() => setActiveTab('troubleshooting')}\n          >\n            <BookOpen size={16} />\n            Troubleshooting\n          </button>\n          <button \n            className={`${styles.tab} ${activeTab === 'contacts' ? styles.activeTab : ''}`}\n            onClick={() => setActiveTab('contacts')}\n          >\n            <Users size={16} />\n            Contacts & Escalation\n          </button>\n        </div>\n\n        <div className={styles.tabContent}>\n          {activeTab === 'overview' && (\n            <div className={styles.overviewTab}>\n              <div className={styles.section}>\n                <h3>Impact Assessment</h3>\n                <div className={styles.impactGrid}>\n                  <div className={styles.impactItem}>\n                    <label>Business Impact:</label>\n                    <span className={`${styles.impactBadge} ${styles[alert.impactAssessment.businessImpact]}`}>\n                      {alert.impactAssessment.businessImpact.toUpperCase()}\n                    </span>\n                  </div>\n                  <div className={styles.impactItem}>\n                    <label>Data Classification:</label>\n                    <span className={styles.classificationBadge}>\n                      {alert.impactAssessment.dataClassification.toUpperCase()}\n                    </span>\n                  </div>\n                  <div className={styles.impactItem}>\n                    <label>Customer Impact:</label>\n                    <span className={`${styles.booleanBadge} ${alert.impactAssessment.customerImpact ? styles.yes : styles.no}`}>\n                      {alert.impactAssessment.customerImpact ? 'YES' : 'NO'}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className={styles.affectedSystems}>\n                  <label>Affected Systems:</label>\n                  <div className={styles.systemsList}>\n                    {alert.impactAssessment.affectedSystems.map((system, index) => (\n                      <span key={index} className={styles.systemTag}>{system}</span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.section}>\n                <h3>Alert Context</h3>\n                <div className={styles.contextGrid}>\n                  <div className={styles.contextItem}>\n                    <label>Alert Rule:</label>\n                    <span>{alert.alertContext.alertRule}</span>\n                  </div>\n                  <div className={styles.contextItem}>\n                    <label>Trigger Condition:</label>\n                    <span>{alert.alertContext.triggerCondition}</span>\n                  </div>\n                  <div className={styles.contextItem}>\n                    <label>Threshold:</label>\n                    <span>{alert.alertContext.threshold}</span>\n                  </div>\n                  <div className={styles.contextItem}>\n                    <label>Actual Value:</label>\n                    <span className={styles.actualValue}>{alert.alertContext.actualValue}</span>\n                  </div>\n                  <div className={styles.contextItem}>\n                    <label>Frequency:</label>\n                    <span>{alert.alertContext.frequency} occurrence(s)</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'logs' && (\n            <div className={styles.logsTab}>\n              <div className={styles.section}>\n                <h3>Log References</h3>\n                {alert.logReferences.map((logRef, index) => (\n                  <div key={index} className={styles.logReference}>\n                    <div className={styles.logHeader}>\n                      <div className={styles.logSystem}>\n                        <Database size={16} />\n                        <span>{logRef.logSystem.replace('_', ' ').toUpperCase()}</span>\n                      </div>\n                      <div className={styles.logActions}>\n                        <button \n                          onClick={() => handleCopy(logRef.correlationId, 'Correlation ID')}\n                          className={`${styles.copyButton} ${copiedText === 'Correlation ID' ? styles.copied : ''}`}\n                          title=\"Copy Correlation ID\"\n                        >\n                          <Copy size={14} />\n                          {copiedText === 'Correlation ID' ? 'Copied!' : 'Copy ID'}\n                        </button>\n                        <a \n                          href={logRef.logUrl} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className={styles.logLink}\n                        >\n                          <ExternalLink size={14} />\n                          Open Logs\n                        </a>\n                      </div>\n                    </div>\n                    <div className={styles.logDetails}>\n                      <div className={styles.logDetail}>\n                        <label>Correlation ID:</label>\n                        <code>{logRef.correlationId}</code>\n                      </div>\n                      <div className={styles.logDetail}>\n                        <label>Time Range:</label>\n                        <span>\n                          {formatDateTime(logRef.timeRange.start)} - {formatDateTime(logRef.timeRange.end)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'troubleshooting' && (\n            <div className={styles.troubleshootingTab}>\n              <div className={styles.section}>\n                <h3>Known Issues</h3>\n                <div className={styles.knownIssues}>\n                  {alert.troubleshooting.knownIssues.length > 0 ? (\n                    alert.troubleshooting.knownIssues.map((issue, index) => (\n                      <div key={index} className={styles.issueItem}>\n                        <AlertTriangle size={16} />\n                        <span>{issue}</span>\n                      </div>\n                    ))\n                  ) : (\n                    <p className={styles.noData}>No known issues for this alert type.</p>\n                  )}\n                </div>\n              </div>\n\n              <div className={styles.section}>\n                <h3>Diagnostic Queries</h3>\n                <div className={styles.diagnosticQueries}>\n                  {alert.troubleshooting.diagnosticQueries.map((query, index) => (\n                    <div key={index} className={styles.queryItem}>\n                      <div className={styles.queryHeader}>\n                        <span>Query {index + 1}</span>\n                        <button \n                          onClick={() => handleCopy(query, `Query ${index + 1}`)}\n                          className={`${styles.copyButton} ${copiedText === `Query ${index + 1}` ? styles.copied : ''}`}\n                        >\n                          <Copy size={14} />\n                          {copiedText === `Query ${index + 1}` ? 'Copied!' : 'Copy'}\n                        </button>\n                      </div>\n                      <code className={styles.queryCode}>{query}</code>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className={styles.section}>\n                <h3>Runbooks & Documentation</h3>\n                <div className={styles.runbooks}>\n                  {alert.troubleshooting.runbooks.map((runbook, index) => (\n                    <a \n                      key={index}\n                      href={runbook} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className={styles.runbookLink}\n                    >\n                      <BookOpen size={16} />\n                      <span>Incident Response Runbook {index + 1}</span>\n                      <ExternalLink size={14} />\n                    </a>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'contacts' && (\n            <div className={styles.contactsTab}>\n              <div className={styles.section}>\n                <h3>Point of Contact</h3>\n                <div className={styles.contactCard}>\n                  <div className={styles.contactHeader}>\n                    <User size={20} />\n                    <div className={styles.contactInfo}>\n                      <h4>{alert.pointOfContact.primaryContact}</h4>\n                      <p>{alert.pointOfContact.team}</p>\n                    </div>\n                  </div>\n                  <div className={styles.contactDetails}>\n                    <div className={styles.contactItem}>\n                      <Mail size={16} />\n                      <a href={`mailto:${alert.pointOfContact.email}`}>\n                        {alert.pointOfContact.email}\n                      </a>\n                    </div>\n                    {alert.pointOfContact.slackChannel && (\n                      <div className={styles.contactItem}>\n                        <MessageSquare size={16} />\n                        <span>{alert.pointOfContact.slackChannel}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.section}>\n                <h3>Escalation Path</h3>\n                <div className={styles.escalationPath}>\n                  {alert.pointOfContact.escalationPath.map((role, index) => (\n                    <div key={index} className={styles.escalationStep}>\n                      <div className={styles.stepNumber}>{index + 1}</div>\n                      <span>{role}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={styles.modalActions}>\n          <div className={styles.statusInfo}>\n            {alert.resolved ? (\n              <div className={styles.resolvedStatus}>\n                <CheckCircle size={16} />\n                <span>Resolved at {alert.resolvedAt ? formatDateTime(alert.resolvedAt) : 'Unknown'}</span>\n              </div>\n            ) : (\n              <div className={styles.activeStatus}>\n                <Activity size={16} />\n                <span>Active Alert</span>\n              </div>\n            )}\n          </div>\n          <div className={styles.actionButtons}>\n            {!alert.resolved && (\n              <>\n                <button onClick={onAcknowledge} className={styles.acknowledgeButton}>\n                  <Clock size={16} />\n                  Acknowledge\n                </button>\n                <button onClick={onResolve} className={styles.resolveButton}>\n                  <CheckCircle size={16} />\n                  Resolve\n                </button>\n              </>\n            )}\n            <button onClick={onClose} className={styles.cancelButton}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default AlertDetailsModal;\n","import { useState, useEffect, memo } from 'react';\nimport { \n  AlertTriangle, \n  Search, \n  Check,\n  HelpCircle,\n  Activity,\n  Shield\n} from 'lucide-react';\nimport { mockAlerts, mockPipelines } from '../data/mockData';\nimport type { Alert } from '../types';\nimport HowItWorksModal from '../components/HowItWorksModal';\nimport ChallengesModal from '../components/ChallengesModal';\nimport AlertDetailsModal from '../components/AlertDetailsModal';\nimport styles from './Alerts.module.css';\n\nconst Alerts = memo(() => {\n  const [alerts, setAlerts] = useState<Alert[]>(mockAlerts);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeTab, setActiveTab] = useState<'active' | 'rules' | 'history' | 'correlation'>('active');\n  const [showHowItWorks, setShowHowItWorks] = useState(false);\n  const [showChallenges, setShowChallenges] = useState(false);\n  const [realTimeMode, setRealTimeMode] = useState(false);\n  const [newAlertCount, setNewAlertCount] = useState(0);\n  const [selectedAlert, setSelectedAlert] = useState<Alert | null>(null);\n\n  // Show notification when new alerts arrive\n  useEffect(() => {\n    if (newAlertCount > 0) {\n      const timer = setTimeout(() => {\n        setNewAlertCount(0);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [newAlertCount]);\n\n  // Real-time alert simulation\n  useEffect(() => {\n    if (!realTimeMode) return;\n\n    const interval = setInterval(() => {\n      const shouldGenerateAlert = Math.random() < 0.3;\n      \n      if (shouldGenerateAlert) {\n        const alertMessages = [\n          'Suspicious login detected from unknown IP address',\n          'API rate limit exceeded for external threat feed',\n          'ML model confidence dropped below threshold',\n          'Data pipeline processing time exceeded SLA',\n          'Unusual data export volume detected',\n          'Geolocation anomaly in user access pattern'\n        ];\n\n        const severities: Array<'low' | 'medium' | 'high' | 'critical'> = ['low', 'medium', 'high', 'critical'];\n        const categories = ['Infrastructure', 'Internal User Security', 'External Threat', 'AI/ML Anomaly', 'Data Access', 'Data Quality', 'Geopolitical Threat'];\n        const pipelines = mockPipelines.slice(0, 10);\n\n        const newAlert: Alert = {\n          id: `alert-${Date.now()}`,\n          pipelineId: pipelines[Math.floor(Math.random() * pipelines.length)].id,\n          severity: severities[Math.floor(Math.random() * severities.length)],\n          message: alertMessages[Math.floor(Math.random() * alertMessages.length)],\n          timestamp: new Date(),\n          resolved: false,\n          resolvedAt: undefined,\n          acknowledgedBy: undefined,\n          category: categories[Math.floor(Math.random() * categories.length)],\n          logReferences: [{\n            logSystem: 'azure_monitor' as const,\n            logUrl: `https://portal.azure.com/logs/${Date.now()}`,\n            correlationId: `corr-${Date.now()}`,\n            timeRange: {\n              start: new Date(Date.now() - 3600000),\n              end: new Date()\n            }\n          }],\n          pointOfContact: {\n            team: 'MSTIC Data Engineering',\n            primaryContact: 'John Doe',\n            email: 'john.doe@microsoft.com',\n            slackChannel: '#mstic-alerts',\n            escalationPath: ['Team Lead', 'Manager', 'Director']\n          },\n          impactAssessment: {\n            businessImpact: severities[Math.floor(Math.random() * severities.length)] as any,\n            affectedSystems: ['Threat Intelligence Pipeline'],\n            dataClassification: 'confidential' as const,\n            customerImpact: Math.random() < 0.3\n          },\n          troubleshooting: {\n            knownIssues: ['Known intermittent issue with external API'],\n            diagnosticQueries: ['SELECT * FROM logs WHERE timestamp > NOW() - INTERVAL 1 HOUR'],\n            relatedIncidents: [],\n            runbooks: ['https://wiki.microsoft.com/incident-response']\n          },\n          alertContext: {\n            alertRule: 'Real-time Anomaly Detection',\n            triggerCondition: 'Threshold exceeded',\n            threshold: 100,\n            actualValue: Math.floor(Math.random() * 150) + 100,\n            frequency: 1\n          }\n        };\n\n        setAlerts(prev => [newAlert, ...prev]);\n        setNewAlertCount(prev => prev + 1);\n      }\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [realTimeMode]);\n\n  const handleAlertClick = (alert: Alert) => {\n    setSelectedAlert(alert);\n  };\n\n  const handleResolveAlert = (alertId: string) => {\n    setAlerts(prev => prev.map(a => \n      a.id === alertId ? { ...a, resolved: true, resolvedAt: new Date() } : a\n    ));\n    setSelectedAlert(null);\n  };\n\n  const handleAcknowledgeAlert = (alertId: string) => {\n    setAlerts(prev => prev.map(a => \n      a.id === alertId ? { ...a, acknowledgedBy: 'Current User' } : a\n    ));\n  };\n\n  return (\n    <div className={styles.alertsPage}>\n      <div className={styles.pageHeader}>\n        <div className={styles.headerContent}>\n          <h1 className={styles.pageTitle}>Alert Management</h1>\n          <p className={styles.pageSubtitle}>Monitor and manage threat intelligence pipeline alerts</p>\n        </div>\n        <div className={styles.headerActions}>\n          <button\n            onClick={() => setRealTimeMode(!realTimeMode)}\n            className={`${styles.realTimeToggle} ${realTimeMode ? styles.active : ''}`}\n            title={realTimeMode ? 'Disable real-time monitoring' : 'Enable real-time monitoring'}\n          >\n            <Activity size={16} />\n            Real-time {realTimeMode ? 'ON' : 'OFF'}\n            {newAlertCount > 0 && (\n              <span className={styles.notificationBadge}>{newAlertCount}</span>\n            )}\n          </button>\n          <button\n            onClick={() => setShowHowItWorks(true)}\n            className={styles.howItWorksBtn}\n            title=\"Learn about alert correlation\"\n          >\n            <HelpCircle size={16} />\n            How It Works\n          </button>\n          <button\n            onClick={() => setShowChallenges(true)}\n            className={styles.howItWorksBtn}\n            title=\"Implementation Challenges\"\n          >\n            <Shield size={16} />\n            Implementation Challenges\n          </button>\n        </div>\n      </div>\n\n      <div className={styles.tabNavigation}>\n        <button \n          className={`${styles.tab} ${activeTab === 'active' ? styles.activeTab : ''}`}\n          onClick={() => setActiveTab('active')}\n        >\n          Active Alerts\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'rules' ? styles.activeTab : ''}`}\n          onClick={() => setActiveTab('rules')}\n        >\n          Alert Rules\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'history' ? styles.activeTab : ''}`}\n          onClick={() => setActiveTab('history')}\n        >\n          History\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'correlation' ? styles.activeTab : ''}`}\n          onClick={() => setActiveTab('correlation')}\n        >\n          Correlation\n        </button>\n      </div>\n\n      <div className={styles.tabContent}>\n        {activeTab === 'active' && (\n          <div className={styles.activeAlertsTab}>\n            <div className={styles.summarySection}>\n              <h2>Alert Summary</h2>\n              <div className={styles.summaryCards}>\n                <div className={styles.summaryCard}>\n                  <AlertTriangle className={styles.critical} />\n                  <span>Critical: {alerts.filter(a => !a.resolved && a.severity === 'critical').length}</span>\n                </div>\n                <div className={styles.summaryCard}>\n                  <AlertTriangle className={styles.high} />\n                  <span>High: {alerts.filter(a => !a.resolved && a.severity === 'high').length}</span>\n                </div>\n                <div className={styles.summaryCard}>\n                  <AlertTriangle className={styles.medium} />\n                  <span>Medium: {alerts.filter(a => !a.resolved && a.severity === 'medium').length}</span>\n                </div>\n                <div className={styles.summaryCard}>\n                  <AlertTriangle className={styles.low} />\n                  <span>Low: {alerts.filter(a => !a.resolved && a.severity === 'low').length}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className={styles.alertsListSection}>\n              <div className={styles.alertsHeader}>\n                <h3>Active Alerts ({alerts.filter(a => !a.resolved).length})</h3>\n                <div className={styles.searchContainer}>\n                  <Search size={16} />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search alerts...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className={styles.alertsList}>\n                {alerts.filter(a => !a.resolved && \n                  a.message.toLowerCase().includes(searchTerm.toLowerCase())\n                ).map(alert => (\n                  <div \n                    key={alert.id} \n                    className={`${styles.alertRow} ${styles[alert.severity]} ${styles.clickable}`}\n                    onClick={() => handleAlertClick(alert)}\n                    title=\"Click to view alert details\"\n                  >\n                    <div className={styles.alertContent}>\n                      <AlertTriangle className={styles.severityIcon} />\n                      <div className={styles.alertMessage}>\n                        {alert.message}\n                      </div>\n                      <div className={styles.alertMeta}>\n                        {new Date(alert.timestamp).toLocaleString()}\n                        {alert.acknowledgedBy && (\n                          <span className={styles.acknowledgedBadge}>\n                            Acknowledged by {alert.acknowledgedBy}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className={styles.alertActions}>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setAlerts(prev => prev.map(a => \n                            a.id === alert.id ? { ...a, resolved: true, resolvedAt: new Date() } : a\n                          ));\n                        }}\n                        className={styles.resolveBtn}\n                        title=\"Resolve this alert\"\n                      >\n                        <Check size={16} />\n                        Resolve\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'correlation' && (\n          <div className={styles.correlationTab}>\n            <h2>Alert Correlation Analysis</h2>\n            <p>Advanced correlation analysis for threat intelligence alerts</p>\n            \n            <div className={styles.correlationInsights}>\n              <div className={styles.insightCard}>\n                <h3>Correlation Strength Distribution</h3>\n                <div className={styles.strengthIndicators}>\n                  <div className={styles.strengthItem}>\n                    <span className={`${styles.strengthDot} ${styles.high}`}></span>\n                    High Correlation: Same pipeline alerts\n                  </div>\n                  <div className={styles.strengthItem}>\n                    <span className={`${styles.strengthDot} ${styles.medium}`}></span>\n                    Medium Correlation: Same category alerts  \n                  </div>\n                  <div className={styles.strengthItem}>\n                    <span className={`${styles.strengthDot} ${styles.low}`}></span>\n                    Low Correlation: Time-based proximity\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {showHowItWorks && (\n        <HowItWorksModal \n          isOpen={showHowItWorks}\n          section=\"alerts\"\n          onClose={() => setShowHowItWorks(false)} \n        />\n      )}\n      \n      <ChallengesModal\n        isOpen={showChallenges}\n        section=\"alerts\"\n        onClose={() => setShowChallenges(false)}\n      />\n\n      {selectedAlert && (\n        <AlertDetailsModal\n          alert={selectedAlert}\n          isOpen={!!selectedAlert}\n          onClose={() => setSelectedAlert(null)}\n          onResolve={() => handleResolveAlert(selectedAlert.id)}\n          onAcknowledge={() => handleAcknowledgeAlert(selectedAlert.id)}\n        />\n      )}\n    </div>\n  );\n});\n\nexport default Alerts;\n"],"names":["AlertDetailsModal","alert","isOpen","onClose","onResolve","onAcknowledge","activeTab","setActiveTab","useState","copiedText","setCopiedText","handleCopy","text","label","err","getSeverityColor","severity","formatDateTime","date","jsxs","Fragment","styles","jsx","CheckCircle","e","AlertTriangle","Calendar","X","Eye","Database","BookOpen","Users","system","index","logRef","Copy","ExternalLink","issue","query","runbook","User","Mail","MessageSquare","role","Activity","Clock","Alerts","memo","alerts","setAlerts","mockAlerts","searchTerm","setSearchTerm","showHowItWorks","setShowHowItWorks","showChallenges","setShowChallenges","realTimeMode","setRealTimeMode","newAlertCount","setNewAlertCount","selectedAlert","setSelectedAlert","useEffect","timer","interval","alertMessages","severities","categories","pipelines","mockPipelines","newAlert","prev","handleAlertClick","handleResolveAlert","alertId","a","handleAcknowledgeAlert","HelpCircle","Shield","Search","Check","HowItWorksModal","ChallengesModal"],"mappings":"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"}