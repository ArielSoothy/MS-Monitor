{"version":3,"file":"PredictiveInsights-DIJlt3cF.js","sources":["../../src/pages/PredictiveInsights.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Shield, \n  AlertTriangle, \n  TrendingUp, \n  Clock, \n  Info, \n  RefreshCw,\n  Target,\n  HelpCircle,\n  User,\n  Eye,\n  Zap,\n  Lock,\n  UserX,\n  Database,\n  Map,\n  Key\n} from 'lucide-react';\nimport { ThreatPrediction, ThreatType, ThreatSeverity, SecurityFeatures } from '../types';\nimport HowItWorksModal from '../components/HowItWorksModal';\nimport InfoTooltip from '../components/InfoTooltip';\nimport { getTooltipContent } from '../utils/tooltipContent';\nimport styles from './PredictiveInsights.module.css';\n\n// Seeded random function for consistent demo data\nconst seededRandom = (seed: string): number => {\n  let hash = 0;\n  for (let i = 0; i < seed.length; i++) {\n    const char = seed.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash) / 2147483647;\n};\n\nconst PredictiveInsights: React.FC = () => {\n  const [predictions, setPredictions] = useState<ThreatPrediction[]>([]);\n  const [selectedPrediction, setSelectedPrediction] = useState<ThreatPrediction | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n  const [showModelDetails, setShowModelDetails] = useState(false);\n  const [showModelExplanation, setShowModelExplanation] = useState(false);\n  const [showHowItWorks, setShowHowItWorks] = useState(false);\n  const [selectedThreatType, setSelectedThreatType] = useState<ThreatType | 'all'>('all');\n\n  // Generate realistic user data for threat analysis\n  const generateUserProfiles = (): ThreatPrediction[] => {\n    const departments = ['Engineering', 'Sales', 'Marketing', 'Finance', 'HR', 'IT', 'Legal', 'Operations'];\n    const roles = ['Engineer', 'Manager', 'Director', 'Analyst', 'Coordinator', 'Specialist', 'Admin', 'Executive'];\n    // Generate anonymized user IDs instead of real names for privacy\n    const userCount = 25;\n\n    return Array.from({ length: userCount }, (_, index) => {\n      const userId = `user${(index + 1000).toString().padStart(4, '0')}`;\n      const department = departments[Math.floor(seededRandom(`${userId}-dept`) * departments.length)];\n      const role = roles[Math.floor(seededRandom(`${userId}-role`) * roles.length)];\n      \n      // Generate baseline features (normal behavior)\n      const baselineFeatures: SecurityFeatures = {\n        loginFrequency: Math.floor(seededRandom(`${userId}-login-base`) * 5) + 3, // 3-8 logins per day\n        offHoursActivity: Math.floor(seededRandom(`${userId}-hours-base`) * 20) + 5, // 5-25%\n        dataAccessVolume: Math.floor(seededRandom(`${userId}-data-base`) * 10) + 2, // 2-12 GB\n        uniqueResourcesAccessed: Math.floor(seededRandom(`${userId}-resources-base`) * 20) + 10, // 10-30 resources\n        geographicAnomaly: 0, // baseline is 0 km from usual location\n        privilegeLevel: role.includes('Director') || role.includes('Executive') ? 8 : \n                       role.includes('Manager') ? 6 : \n                       role.includes('Admin') ? 7 : 4,\n        accountAge: Math.floor(seededRandom(`${userId}-age`) * 1000) + 100, // 100-1100 days\n        failedLoginAttempts: Math.floor(seededRandom(`${userId}-failed-base`) * 2), // 0-2\n        vpnUsage: Math.floor(seededRandom(`${userId}-vpn-base`) * 30) + 10, // 10-40%\n        deviceCount: Math.floor(seededRandom(`${userId}-devices-base`) * 3) + 1 // 1-4 devices\n      };\n\n      // Generate current features with potential anomalies\n      const anomalyFactor = seededRandom(`${userId}-anomaly`);\n      const hasAnomaly = anomalyFactor > 0.8; // 20% chance of anomaly\n      \n      const currentFeatures: SecurityFeatures = {\n        loginFrequency: hasAnomaly && anomalyFactor > 0.9 ? \n          baselineFeatures.loginFrequency * (2 + seededRandom(`${userId}-login-mult`)) : \n          baselineFeatures.loginFrequency + Math.floor((seededRandom(`${userId}-login-var`) - 0.5) * 2),\n        \n        offHoursActivity: hasAnomaly && seededRandom(`${userId}-hours-type`) > 0.5 ? \n          Math.min(95, baselineFeatures.offHoursActivity * (2 + seededRandom(`${userId}-hours-mult`))) : \n          Math.max(0, baselineFeatures.offHoursActivity + Math.floor((seededRandom(`${userId}-hours-var`) - 0.5) * 10)),\n        \n        dataAccessVolume: hasAnomaly && seededRandom(`${userId}-data-type`) > 0.7 ? \n          baselineFeatures.dataAccessVolume * (3 + seededRandom(`${userId}-data-mult`) * 5) : \n          Math.max(0, baselineFeatures.dataAccessVolume + Math.floor((seededRandom(`${userId}-data-var`) - 0.5) * 5)),\n        \n        uniqueResourcesAccessed: hasAnomaly && seededRandom(`${userId}-res-type`) > 0.6 ? \n          baselineFeatures.uniqueResourcesAccessed * (1.5 + seededRandom(`${userId}-res-mult`)) : \n          Math.max(5, baselineFeatures.uniqueResourcesAccessed + Math.floor((seededRandom(`${userId}-res-var`) - 0.5) * 10)),\n        \n        geographicAnomaly: hasAnomaly && seededRandom(`${userId}-geo-type`) > 0.8 ? \n          Math.floor(seededRandom(`${userId}-geo-dist`) * 5000) + 100 : // 100-5100 km\n          Math.floor(seededRandom(`${userId}-geo-norm`) * 50), // 0-50 km normal variance\n        \n        privilegeLevel: baselineFeatures.privilegeLevel,\n        accountAge: baselineFeatures.accountAge,\n        \n        failedLoginAttempts: hasAnomaly && seededRandom(`${userId}-failed-type`) > 0.7 ? \n          Math.floor(seededRandom(`${userId}-failed-mult`) * 15) + 5 : // 5-20 attempts\n          Math.floor(seededRandom(`${userId}-failed-norm`) * 3), // 0-3 normal\n        \n        vpnUsage: Math.max(0, Math.min(100, baselineFeatures.vpnUsage + Math.floor((seededRandom(`${userId}-vpn-var`) - 0.5) * 30))),\n        \n        deviceCount: hasAnomaly && seededRandom(`${userId}-device-type`) > 0.8 ? \n          baselineFeatures.deviceCount + Math.floor(seededRandom(`${userId}-device-extra`) * 5) + 2 : // Extra devices\n          baselineFeatures.deviceCount\n      };\n\n      // Calculate anomaly score\n      const anomalyScore = calculateAnomalyScore(baselineFeatures, currentFeatures);\n      \n      // Determine threat type and severity\n      const threatType = determineThreatType(currentFeatures, anomalyScore);\n      const severity = determineSeverity(anomalyScore, threatType);\n      const confidence = Math.min(0.95, 0.6 + (anomalyScore / 100) * 0.35);\n      const riskScore = Math.floor(anomalyScore);\n      \n      // Generate reasoning\n      const reasoning = generateReasoning(baselineFeatures, currentFeatures, threatType);\n      const recommendedActions = getRecommendedActions(threatType, severity);\n\n      return {\n        userId,\n        userDisplayName: userId, // Use anonymized user ID instead of real names\n        department,\n        role,\n        threatType,\n        severity,\n        confidence,\n        riskScore,\n        reasoning,\n        features: currentFeatures,\n        lastUpdated: new Date(),\n        recommendedActions,\n        investigationPriority: severity === 'critical' ? 10 : severity === 'high' ? 8 : severity === 'medium' ? 5 : 2\n      };\n    });\n  };\n\n  const calculateAnomalyScore = (baseline: SecurityFeatures, current: SecurityFeatures): number => {\n    let score = 0;\n    let factors = 0;\n\n    // Login frequency anomaly (weight: 15)\n    const loginDiff = Math.abs(current.loginFrequency - baseline.loginFrequency) / baseline.loginFrequency;\n    if (loginDiff > 0.5) {\n      score += Math.min(15, loginDiff * 20);\n      factors++;\n    }\n\n    // Off-hours activity anomaly (weight: 20)\n    const hoursDiff = Math.abs(current.offHoursActivity - baseline.offHoursActivity);\n    if (hoursDiff > 20) {\n      score += Math.min(20, hoursDiff * 0.8);\n      factors++;\n    }\n\n    // Data access volume anomaly (weight: 25)\n    const dataDiff = Math.abs(current.dataAccessVolume - baseline.dataAccessVolume) / baseline.dataAccessVolume;\n    if (dataDiff > 0.8) {\n      score += Math.min(25, dataDiff * 20);\n      factors++;\n    }\n\n    // Geographic anomaly (weight: 15)\n    if (current.geographicAnomaly > 500) {\n      score += Math.min(15, current.geographicAnomaly / 500 * 10);\n      factors++;\n    }\n\n    // Failed login attempts (weight: 10)\n    if (current.failedLoginAttempts > 5) {\n      score += Math.min(10, current.failedLoginAttempts * 1.5);\n      factors++;\n    }\n\n    // Resource access anomaly (weight: 10)\n    const resourceDiff = Math.abs(current.uniqueResourcesAccessed - baseline.uniqueResourcesAccessed) / baseline.uniqueResourcesAccessed;\n    if (resourceDiff > 0.7) {\n      score += Math.min(10, resourceDiff * 10);\n      factors++;\n    }\n\n    // Device count anomaly (weight: 5)\n    if (current.deviceCount > baseline.deviceCount + 2) {\n      score += Math.min(5, (current.deviceCount - baseline.deviceCount) * 2);\n      factors++;\n    }\n\n    return Math.min(100, score);\n  };\n\n  const determineThreatType = (features: SecurityFeatures, anomalyScore: number): ThreatType => {\n    if (features.dataAccessVolume > 50 && features.offHoursActivity > 70) {\n      return 'data_exfiltration';\n    }\n    if (features.uniqueResourcesAccessed > 100 && features.privilegeLevel > 6) {\n      return 'lateral_movement';\n    }\n    if (features.failedLoginAttempts > 10) {\n      return 'credential_abuse';\n    }\n    if (features.geographicAnomaly > 1000) {\n      return 'suspicious_login';\n    }\n    if (features.privilegeLevel > 8 && anomalyScore > 70) {\n      return 'privilege_escalation';\n    }\n    if (features.dataAccessVolume > 30 && features.deviceCount > 5) {\n      return 'data_hoarding';\n    }\n    if (anomalyScore > 60) {\n      return 'insider_threat';\n    }\n    return 'anomalous_access';\n  };\n\n  const determineSeverity = (anomalyScore: number, threatType: ThreatType): ThreatSeverity => {\n    const criticalThreats: ThreatType[] = ['data_exfiltration', 'privilege_escalation'];\n    const highThreats: ThreatType[] = ['insider_threat', 'lateral_movement', 'credential_abuse'];\n    \n    if (anomalyScore > 80 || criticalThreats.includes(threatType)) {\n      return 'critical';\n    }\n    if (anomalyScore > 60 || highThreats.includes(threatType)) {\n      return 'high';\n    }\n    if (anomalyScore > 30) {\n      return 'medium';\n    }\n    return 'low';\n  };\n\n  const generateReasoning = (baseline: SecurityFeatures, current: SecurityFeatures, threatType: ThreatType): string[] => {\n    const reasons: string[] = [];\n\n    if (current.loginFrequency > baseline.loginFrequency * 1.5) {\n      reasons.push(`Login frequency increased by ${Math.round((current.loginFrequency - baseline.loginFrequency) / baseline.loginFrequency * 100)}%`);\n    }\n\n    if (current.offHoursActivity > baseline.offHoursActivity + 30) {\n      reasons.push(`Off-hours activity increased to ${current.offHoursActivity}% (baseline: ${baseline.offHoursActivity}%)`);\n    }\n\n    if (current.dataAccessVolume > baseline.dataAccessVolume * 2) {\n      reasons.push(`Data access volume increased by ${Math.round((current.dataAccessVolume - baseline.dataAccessVolume) / baseline.dataAccessVolume * 100)}%`);\n    }\n\n    if (current.geographicAnomaly > 500) {\n      reasons.push(`Login from unusual location (${Math.round(current.geographicAnomaly)}km from normal)`);\n    }\n\n    if (current.failedLoginAttempts > 5) {\n      reasons.push(`${current.failedLoginAttempts} failed login attempts in 24h`);\n    }\n\n    if (current.uniqueResourcesAccessed > baseline.uniqueResourcesAccessed * 1.5) {\n      reasons.push(`Accessed ${current.uniqueResourcesAccessed} unique resources (baseline: ${baseline.uniqueResourcesAccessed})`);\n    }\n\n    if (current.deviceCount > baseline.deviceCount + 2) {\n      reasons.push(`Using ${current.deviceCount} devices (baseline: ${baseline.deviceCount})`);\n    }\n\n    if (reasons.length === 0) {\n      reasons.push('Subtle behavioral pattern changes detected');\n    }\n\n    // Add threat-specific reasoning\n    switch (threatType) {\n      case 'data_exfiltration':\n        reasons.push('Pattern consistent with data exfiltration attempts');\n        break;\n      case 'insider_threat':\n        reasons.push('Behavioral indicators suggest insider threat risk');\n        break;\n      case 'lateral_movement':\n        reasons.push('Unusual resource access patterns detected');\n        break;\n      case 'credential_abuse':\n        reasons.push('Login patterns suggest credential compromise');\n        break;\n      default:\n        reasons.push('Anomalous behavior requiring investigation');\n    }\n\n    return reasons;\n  };\n\n  const getRecommendedActions = (threatType: ThreatType, severity: ThreatSeverity): string[] => {\n    const baseActions = ['Monitor user activity closely', 'Review access logs', 'Verify with user manager'];\n    \n    const typeSpecificActions: Record<ThreatType, string[]> = {\n      'data_exfiltration': [\n        'Block file downloads/uploads',\n        'Review data access permissions',\n        'Check for data loss prevention alerts',\n        'Monitor network traffic patterns'\n      ],\n      'insider_threat': [\n        'Conduct security interview',\n        'Review recent performance issues',\n        'Check for policy violations',\n        'Increase monitoring duration'\n      ],\n      'lateral_movement': [\n        'Audit resource access paths',\n        'Review privilege assignments',\n        'Check for unauthorized tool usage',\n        'Validate network connections'\n      ],\n      'credential_abuse': [\n        'Force password reset',\n        'Enable MFA if not active',\n        'Check for concurrent sessions',\n        'Review authentication logs'\n      ],\n      'suspicious_login': [\n        'Verify login location with user',\n        'Check for VPN/proxy usage',\n        'Review device fingerprinting',\n        'Implement conditional access policies'\n      ],\n      'anomalous_access': [\n        'Review access justification',\n        'Check approval workflows',\n        'Verify with resource owners',\n        'Update access control policies'\n      ],\n      'privilege_escalation': [\n        'Audit recent permission changes',\n        'Review approval history',\n        'Check for unauthorized admin access',\n        'Validate current role assignments'\n      ],\n      'data_hoarding': [\n        'Review data retention policies',\n        'Check for unauthorized data copying',\n        'Implement automated cleanup rules',\n        'Monitor large file movements'\n      ]\n    };\n    \n    const severityActions: Record<ThreatSeverity, string[]> = {\n      'critical': ['IMMEDIATE ACTION REQUIRED', 'Escalate to security team', 'Consider account suspension'],\n      'high': ['Priority investigation', 'Notify security team within 2 hours'],\n      'medium': ['Schedule investigation within 24 hours', 'Document findings'],\n      'low': ['Monitor for pattern changes', 'Include in weekly review']\n    };\n    \n    return [\n      ...severityActions[severity],\n      ...baseActions,\n      ...typeSpecificActions[threatType]\n    ];\n  };\n\n  // Initialize predictions\n  useEffect(() => {\n    setIsAnalyzing(true);\n    \n    // Simulate analysis time for realism\n    setTimeout(() => {\n      const initialPredictions = generateUserProfiles();\n      setPredictions(initialPredictions);\n      setIsAnalyzing(false);\n    }, 2000);\n  }, []);\n\n  // Update predictions every 5 minutes (more realistic for security monitoring)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPredictions = generateUserProfiles();\n      setPredictions(updatedPredictions);\n      setLastUpdate(new Date());\n    }, 300000); // Update every 5 minutes\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const filteredPredictions = selectedThreatType === 'all' \n    ? predictions \n    : predictions.filter(p => p.threatType === selectedThreatType);\n\n  const criticalThreats = predictions.filter(p => p.severity === 'critical');\n  const highThreats = predictions.filter(p => p.severity === 'high');\n  const avgRiskScore = predictions.length > 0 \n    ? predictions.reduce((sum, p) => sum + p.riskScore, 0) / predictions.length \n    : 0;\n\n  const getStatusColor = (severity: ThreatSeverity) => {\n    switch (severity) {\n      case 'critical': return styles.critical;\n      case 'high': return styles.warning;\n      case 'medium': return styles.medium;\n      case 'low': return styles.healthy;\n      default: return styles.healthy;\n    }\n  };\n\n  const getThreatIcon = (threatType: ThreatType) => {\n    switch (threatType) {\n      case 'data_exfiltration': return <Database size={16} />;\n      case 'insider_threat': return <UserX size={16} />;\n      case 'lateral_movement': return <Map size={16} />;\n      case 'credential_abuse': return <Key size={16} />;\n      case 'suspicious_login': return <User size={16} />;\n      case 'anomalous_access': return <Eye size={16} />;\n      case 'privilege_escalation': return <Zap size={16} />;\n      case 'data_hoarding': return <Lock size={16} />;\n      default: return <Shield size={16} />;\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  if (isAnalyzing) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.trainingOverlay}>\n          <div className={styles.trainingContent}>\n            <RefreshCw className={styles.spinningIcon} size={48} />\n            <h2>Analyzing User Behavior</h2>\n            <p>Processing security events and building threat profiles...</p>\n            <div className={styles.trainingProgress}>\n              <div className={styles.progressBar}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <div className={styles.headerContent}>\n          <div className={styles.headerTitle}>\n            <Shield className={styles.headerIcon} />\n            <div>\n              <h1>\n                Security Threat Prediction\n                <button \n                  className={styles.infoButton}\n                  onClick={() => setShowModelExplanation(true)}\n                  title=\"How does this model work?\"\n                >\n                  <HelpCircle size={18} />\n                </button>\n              </h1>\n              <p>AI-powered behavioral analysis for insider threat detection and security anomalies</p>\n            </div>\n          </div>\n          <div className={styles.headerActions}>\n            <button \n              className={styles.howItWorksButton}\n              onClick={() => setShowHowItWorks(true)}\n              title=\"Learn how this system works\"\n            >\n              <HelpCircle size={16} />\n              How does it work?\n            </button>\n            <div className={styles.lastUpdate}>\n              <Clock size={16} />\n              <span>Updated: {formatTime(lastUpdate)}</span>\n            </div>\n            <button \n              className={styles.modelButton}\n              onClick={() => setShowModelDetails(!showModelDetails)}\n            >\n              <Target size={16} />\n              Model Details\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <div className={styles.disclaimer}>\n        <Info size={16} />\n        <span>Threat predictions based on behavioral analysis - proof of concept for MSTIC demonstration</span>\n      </div>\n\n      {/* Threat Statistics */}\n      <div className={styles.statsGrid}>\n        <div className={styles.statCard}>\n          <div className={styles.statIcon}>\n            <AlertTriangle className={styles.iconRisk} />\n          </div>\n          <div className={styles.statContent}>\n            <div className={styles.statValue}>{criticalThreats.length}</div>\n            <div className={styles.statLabel}>\n              Critical Threats\n              {getTooltipContent('criticalThreats') && (\n                <InfoTooltip \n                  {...getTooltipContent('criticalThreats')!} \n                  position=\"bottom\"\n                  size=\"medium\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className={styles.statCard}>\n          <div className={styles.statIcon}>\n            <UserX className={styles.iconWarning} />\n          </div>\n          <div className={styles.statContent}>\n            <div className={styles.statValue}>{highThreats.length}</div>\n            <div className={styles.statLabel}>\n              High-Risk Users\n              {getTooltipContent('highRiskUsers') && (\n                <InfoTooltip \n                  {...getTooltipContent('highRiskUsers')!} \n                  position=\"bottom\"\n                  size=\"medium\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className={styles.statCard}>\n          <div className={styles.statIcon}>\n            <TrendingUp className={styles.iconConfidence} />\n          </div>\n          <div className={styles.statContent}>\n            <div className={styles.statValue}>{avgRiskScore.toFixed(0)}</div>\n            <div className={styles.statLabel}>\n              Avg Risk Score\n              {getTooltipContent('avgRiskScore') && (\n                <InfoTooltip \n                  {...getTooltipContent('avgRiskScore')!} \n                  position=\"bottom\"\n                  size=\"medium\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className={styles.statCard}>\n          <div className={styles.statIcon}>\n            <Eye className={styles.iconSamples} />\n          </div>\n          <div className={styles.statContent}>\n            <div className={styles.statValue}>{predictions.length}</div>\n            <div className={styles.statLabel}>\n              Users Monitored\n              {getTooltipContent('usersMonitored') && (\n                <InfoTooltip \n                  {...getTooltipContent('usersMonitored')!} \n                  position=\"bottom\"\n                  size=\"medium\"\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.mainContent}>\n        {/* Threat Type Filter */}\n        <div className={styles.section}>\n          <div className={styles.sectionHeader}>\n            <h2>\n              <Shield size={20} />\n              Threat Predictions\n            </h2>\n            <div className={styles.filterControls}>\n              <select \n                value={selectedThreatType}\n                onChange={(e) => setSelectedThreatType(e.target.value as ThreatType | 'all')}\n                className={styles.threatFilter}\n              >\n                <option value=\"all\">All Threat Types</option>\n                <option value=\"insider_threat\">Insider Threat</option>\n                <option value=\"data_exfiltration\">Data Exfiltration</option>\n                <option value=\"lateral_movement\">Lateral Movement</option>\n                <option value=\"credential_abuse\">Credential Abuse</option>\n                <option value=\"anomalous_access\">Anomalous Access</option>\n                <option value=\"privilege_escalation\">Privilege Escalation</option>\n                <option value=\"suspicious_login\">Suspicious Login</option>\n                <option value=\"data_hoarding\">Data Hoarding</option>\n              </select>\n            </div>\n          </div>\n\n          {/* User Threat Predictions */}\n          {filteredPredictions.length === 0 ? (\n            <div className={styles.noRisk}>\n              <Shield size={48} />\n              <h3>No Threats Detected</h3>\n              <p>All users are showing normal behavioral patterns.</p>\n            </div>\n          ) : (\n            <div className={styles.riskGrid}>\n              {filteredPredictions.map(prediction => (\n                <div \n                  key={prediction.userId} \n                  className={`${styles.riskCard} ${getStatusColor(prediction.severity)}`}\n                  onClick={() => setSelectedPrediction(prediction)}\n                >\n                  <div className={styles.riskHeader}>\n                    <div className={styles.riskTitle}>{prediction.userDisplayName}</div>\n                    <div className={styles.riskScore}>\n                      {prediction.riskScore}\n                      {getTooltipContent('riskScore') && (\n                        <InfoTooltip\n                          {...getTooltipContent('riskScore')!}\n                          position=\"bottom\"\n                          size=\"medium\"\n                        />\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className={styles.riskContent}>\n                    <div className={styles.threatType}>\n                      {getThreatIcon(prediction.threatType)}\n                      <span>{prediction.threatType.replace('_', ' ').toUpperCase()}</span>\n                    </div>\n                    \n                    <div className={styles.riskDetails}>\n                      <div className={styles.department}>{prediction.department} • {prediction.role}</div>\n                      <div className={styles.severity}>\n                        Severity: <span className={getStatusColor(prediction.severity)}>{prediction.severity.toUpperCase()}</span>\n                      </div>\n                      <div className={styles.confidence}>\n                        Confidence: {(prediction.confidence * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    \n                    <div className={styles.reasoning}>\n                      <strong>Key Indicators:</strong>\n                      <ul>\n                        {prediction.reasoning.slice(0, 2).map((reason: string, idx: number) => (\n                          <li key={idx}>{reason}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Threat Details Modal */}\n      {selectedPrediction && (\n        <div className={styles.modal} onClick={() => setSelectedPrediction(null)}>\n          <div className={styles.modalContent} onClick={e => e.stopPropagation()}>\n            <div className={styles.modalHeader}>\n              <h2>{selectedPrediction.userDisplayName}</h2>\n              <button \n                onClick={() => setSelectedPrediction(null)}\n                className={styles.closeButton}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className={styles.modalBody}>\n              <div className={styles.threatSummary}>\n                <div className={`${styles.predictionResult} ${getStatusColor(selectedPrediction.severity)}`}>\n                  <div className={styles.threatInfo}>\n                    <div className={styles.threatTypeDisplay}>\n                      {getThreatIcon(selectedPrediction.threatType)}\n                      <span>{selectedPrediction.threatType.replace('_', ' ').toUpperCase()}</span>\n                    </div>\n                    <div className={styles.severityDisplay}>\n                      Severity: {selectedPrediction.severity.toUpperCase()}\n                    </div>\n                    <div className={styles.riskScoreDisplay}>\n                      Risk Score: {selectedPrediction.riskScore}/100\n                    </div>\n                    <div className={styles.confidenceDisplay}>\n                      Confidence: {(selectedPrediction.confidence * 100).toFixed(1)}%\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.behavioralAnalysis}>\n                <h3>Behavioral Indicators</h3>\n                <div className={styles.featureGrid}>\n                  {Object.entries(selectedPrediction.features).map(([feature, value]) => (\n                    <div key={feature} className={styles.featureCard}>\n                      <div className={styles.featureName}>\n                        {feature.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()).replace(/\\b\\w/g, l => l.toUpperCase())}\n                      </div>\n                      <div className={styles.featureValue}>\n                        {(() => {\n                          if (typeof value !== 'number') return value;\n                          \n                          // Format specific features with appropriate units\n                          if (feature.includes('Frequency')) return `${value}/day`;\n                          if (feature.includes('Volume')) return `${value.toFixed(1)} GB`;\n                          if (feature.includes('Activity') || feature.includes('Usage')) return `${value.toFixed(0)}%`;\n                          if (feature.includes('Anomaly') && value > 0) return `${value.toFixed(0)} km`;\n                          if (feature.includes('Attempts')) return `${value} attempts`;\n                          if (feature.includes('Count')) return `${value} devices`;\n                          if (feature.includes('Age')) return `${value} days`;\n                          if (feature.includes('Level')) return `Level ${value}`;\n                          \n                          return value.toFixed(1);\n                        })()}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className={styles.reasoning}>\n                <h3>Why this prediction?</h3>\n                <ul>\n                  {selectedPrediction.reasoning.map((reason: string, idx: number) => (\n                    <li key={idx}>{reason}</li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className={styles.recommendedActions}>\n                <h3>Recommended Actions</h3>\n                <ul>\n                  {selectedPrediction.recommendedActions.map((action: string, idx: number) => (\n                    <li key={idx}>{action}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Model Explanation Modal */}\n      {showModelExplanation && (\n        <div className={styles.modal} onClick={() => setShowModelExplanation(false)}>\n          <div className={styles.modelExplanationModal} onClick={e => e.stopPropagation()}>\n            <div className={styles.modalHeader}>\n              <h2>How Security Threat Prediction Works</h2>\n              <button \n                onClick={() => setShowModelExplanation(false)}\n                className={styles.closeButton}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className={styles.modalBody}>\n              <div className={styles.explanationSection}>\n                <h3>🧠 Behavioral Analysis Model</h3>\n                <p>Our system uses advanced machine learning to analyze user behavior patterns and detect potential security threats. The model examines multiple behavioral indicators to identify anomalies that could indicate malicious activity.</p>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>📊 Key Behavioral Features</h3>\n                <div className={styles.featureExplanations}>\n                  <div className={styles.featureExplanation}>\n                    <h4>🕐 Login Patterns</h4>\n                    <p>Analyzes login frequency, timing, and off-hours activity to detect unusual access patterns.</p>\n                  </div>\n                  \n                  <div className={styles.featureExplanation}>\n                    <h4>📁 Data Access Volume</h4>\n                    <p>Monitors data access patterns and volume changes that could indicate data exfiltration attempts.</p>\n                  </div>\n                  \n                  <div className={styles.featureExplanation}>\n                    <h4>🌍 Geographic Anomalies</h4>\n                    <p>Detects unusual login locations and potential account compromise indicators.</p>\n                  </div>\n                  \n                  <div className={styles.featureExplanation}>\n                    <h4>🔑 Privilege Usage</h4>\n                    <p>Monitors privilege escalation attempts and unauthorized access to sensitive resources.</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>🎯 Threat Classification</h3>\n                <p>The model classifies threats into specific categories like insider threats, data exfiltration, lateral movement, and credential abuse, enabling targeted response strategies.</p>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>⚠️ For MSTIC Interview Demonstration</h3>\n                <ul className={styles.limitations}>\n                  <li><strong>Proof of Concept:</strong> This demonstrates behavioral analysis capabilities</li>\n                  <li><strong>Realistic Patterns:</strong> Uses simulated but realistic security data</li>\n                  <li><strong>Production Ready:</strong> Architecture supports real-time threat detection</li>\n                  <li><strong>MITRE ATT&CK:</strong> Aligned with security frameworks and best practices</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Model Details Section */}\n      {showModelDetails && (\n        <div className={styles.modalOverlay} onClick={() => setShowModelDetails(false)}>\n          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>\n            <div className={styles.modalHeader}>\n              <div className={styles.titleSection}>\n                <Target size={24} />\n                <h2>ML Model Technical Details</h2>\n              </div>\n              <button \n                className={styles.closeButton}\n                onClick={() => setShowModelDetails(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className={styles.modalBody}>\n              <div className={styles.explanationSection}>\n                <h3>🤖 Model Architecture Overview</h3>\n                <div className={styles.conceptualGrid}>\n                  <div className={styles.conceptualCard}>\n                    <p><strong>Algorithm:</strong> XGBoost Ensemble with gradient boosting for optimal threat detection accuracy</p>\n                  </div>\n                  <div className={styles.conceptualCard}>\n                    <p><strong>Features:</strong> 47 behavioral indicators across access patterns, geographic data, and privilege usage</p>\n                  </div>\n                  <div className={styles.conceptualCard}>\n                    <p><strong>Training Data:</strong> 2.3M threat intelligence records with real-world attack patterns</p>\n                  </div>\n                  <div className={styles.conceptualCard}>\n                    <p><strong>Model Version:</strong> v2.4.1 (Production) - Latest stable release with enhanced accuracy</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>📊 Performance & Metrics Pipeline</h3>\n                <div className={styles.technicalSteps}>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>1</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Model Accuracy:</strong> 94.2% validation accuracy with 91.8% precision on critical threats</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>2</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Inference Performance:</strong> ~15ms average response time with 1,200 predictions/second throughput</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>3</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Resource Efficiency:</strong> 2.1GB model size with 12% average CPU usage and optimized memory footprint</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>4</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Quality Metrics:</strong> 3.2% false positive rate with 0.967 AUC-ROC score for reliable threat detection</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>🔍 Feature Importance Analysis</h3>\n                <div className={styles.implementationGrid}>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>🕐</div>\n                    <p><strong>Off-hours Access (23.4%):</strong> Detects unusual timing patterns in user activity</p>\n                  </div>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>🌍</div>\n                    <p><strong>Geographic Anomaly (18.7%):</strong> Identifies suspicious location-based access patterns</p>\n                  </div>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>📊</div>\n                    <p><strong>Data Volume Deviation (16.2%):</strong> Monitors unusual data access and transfer patterns</p>\n                  </div>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>🔑</div>\n                    <p><strong>Privilege Escalation (14.9%):</strong> Tracks unauthorized elevation of user permissions</p>\n                  </div>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>📈</div>\n                    <p><strong>Access Frequency (12.1%):</strong> Analyzes changes in normal access patterns</p>\n                  </div>\n                  <div className={styles.implementationCard}>\n                    <div className={styles.implementationIcon}>🔄</div>\n                    <p><strong>Lateral Movement (8.3%):</strong> Detects horizontal network traversal indicators</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.explanationSection}>\n                <h3>⚙️ Production Configuration & Deployment</h3>\n                <div className={styles.technicalSteps}>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>⚡</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Azure ML Endpoints:</strong> Real-time inference with &lt;15ms SLA and auto-scaling capabilities</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>⚙️</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Hyperparameters:</strong> Learning Rate: 0.1, Max Depth: 6, N Estimators: 300, L2 Regularization</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>🔄</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>MLOps Pipeline:</strong> Weekly automated retraining with A/B testing and drift detection</div>\n                    </div>\n                  </div>\n                  <div className={styles.technicalStep}>\n                    <div className={styles.stepNumber}>🛡️</div>\n                    <div className={styles.stepContent}>\n                      <div><strong>Security & Compliance:</strong> Azure AD secured endpoints with SOC 2 Type II compliance</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={styles.msticNote}>\n                <div className={styles.noteHeader}>\n                  <Target size={16} />\n                  <span>MSTIC Production Implementation</span>\n                </div>\n                <p>\n                  This ML model is designed for Microsoft Security Threat Intelligence Center operations, \n                  processing sensitive threat intelligence data with enterprise-grade security, automated \n                  feature engineering via Azure Data Factory, and real-time monitoring through Azure Application Insights. \n                  The model supports Microsoft's global security infrastructure with automatic rollback strategies \n                  and comprehensive model governance frameworks.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <HowItWorksModal \n        isOpen={showHowItWorks}\n        onClose={() => setShowHowItWorks(false)}\n        section=\"predictiveInsights\"\n      />\n    </div>\n  );\n};\n\nexport default PredictiveInsights;\n"],"names":["seededRandom","seed","hash","i","char","PredictiveInsights","predictions","setPredictions","useState","selectedPrediction","setSelectedPrediction","isAnalyzing","setIsAnalyzing","lastUpdate","setLastUpdate","showModelDetails","setShowModelDetails","showModelExplanation","setShowModelExplanation","showHowItWorks","setShowHowItWorks","selectedThreatType","setSelectedThreatType","generateUserProfiles","departments","roles","_","index","userId","department","role","baselineFeatures","anomalyFactor","hasAnomaly","currentFeatures","anomalyScore","calculateAnomalyScore","threatType","determineThreatType","severity","determineSeverity","confidence","riskScore","reasoning","generateReasoning","recommendedActions","getRecommendedActions","baseline","current","score","loginDiff","hoursDiff","dataDiff","resourceDiff","features","criticalThreats","highThreats","reasons","baseActions","typeSpecificActions","useEffect","initialPredictions","interval","updatedPredictions","filteredPredictions","p","avgRiskScore","sum","getStatusColor","styles","getThreatIcon","jsx","Database","UserX","Map","Key","User","Eye","Zap","Lock","Shield","formatTime","date","jsxs","RefreshCw","HelpCircle","Clock","Target","Info","AlertTriangle","getTooltipContent","InfoTooltip","TrendingUp","e","prediction","reason","idx","feature","value","str","l","action","HowItWorksModal"],"mappings":"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"}