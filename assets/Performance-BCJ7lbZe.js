import{j as e}from"./index-C2RvNhh1.js";import{r}from"./charts-CVhI3LTv.js";import{A as n,C as f,Z as y,c as v,D as N,a1 as w,b as C,a2 as I,q as o,T as m}from"./icons-xX1ujmH_.js";import"./vendor-Csw2ODfV.js";import"./router-BUTKzT10.js";const H="_performancePage_ef4ow_2",M="_header_ef4ow_10",S="_titleSection_ef4ow_19",q="_titleIcon_ef4ow_25",T="_refreshIndicator_ef4ow_43",U="_loadingContainer_ef4ow_55",b="_loadingIcon_ef4ow_65",R="_systemHealthGrid_ef4ow_75",z="_healthCard_ef4ow_82",L="_cardHeader_ef4ow_96",E="_cardIcon_ef4ow_103",V="_healthMetrics_ef4ow_114",k="_metric_ef4ow_120",P="_metricLabel_ef4ow_130",G="_metricValue_ef4ow_135",Q="_queryMetricsSection_ef4ow_142",A="_metricsGrid_ef4ow_153",O="_metricCard_ef4ow_159",F="_selected_ef4ow_174",B="_metricHeader_ef4ow_179",D="_statusIndicator_ef4ow_186",$="_statusText_ef4ow_194",Z="_metricId_ef4ow_198",J="_metricQuery_ef4ow_204",K="_metricStats_ef4ow_220",W="_stat_ef4ow_186",X="_detailView_ef4ow_239",Y="_detailGrid_ef4ow_256",ee="_detailCard_ef4ow_263",se="_detailMetrics_ef4ow_277",ae="_detailMetric_ef4ow_277",ie="_suggestions_ef4ow_305",te="_suggestion_ef4ow_305",re="_queryCode_ef4ow_330",s={performancePage:H,header:M,titleSection:S,titleIcon:q,refreshIndicator:T,loadingContainer:U,loadingIcon:b,systemHealthGrid:R,healthCard:z,cardHeader:L,cardIcon:E,healthMetrics:V,metric:k,metricLabel:P,metricValue:G,queryMetricsSection:Q,metricsGrid:A,metricCard:O,selected:F,metricHeader:B,statusIndicator:D,statusText:$,metricId:Z,metricQuery:J,metricStats:K,stat:W,detailView:X,detailGrid:Y,detailCard:ee,detailMetrics:se,detailMetric:ae,suggestions:ie,suggestion:te,queryCode:re},me=()=>{const[h,u]=r.useState([]),[t,x]=r.useState(null),[i,j]=r.useState(null),[g,l]=r.useState(!0);r.useEffect(()=>{d();const a=setInterval(d,3e4);return()=>clearInterval(a)},[]);const d=async()=>{try{l(!0);const a=[{queryId:"threat-overview-001",query:'SecurityEvents | summarize TotalEvents = count(), HighRiskEvents = countif(ThreatLevel == "Critical")',executionTime:1247,resourceUsage:{cpuTime:.8,memoryUsage:156.7,networkIO:23.4},recordsScanned:2847592,recordsReturned:1,scanEfficiency:99.97,cacheHitRate:87.3,status:"optimized",suggestions:["Consider adding time filters to reduce scan scope"]},{queryId:"geo-threats-002",query:'SecurityEvents | where ThreatLevel in ("High", "Critical") | summarize by Country, City',executionTime:3421,resourceUsage:{cpuTime:2.1,memoryUsage:445.2,networkIO:67.8},recordsScanned:5847293,recordsReturned:847,scanEfficiency:85.4,cacheHitRate:23.1,status:"warning",suggestions:["Add indexed column for ThreatLevel","Consider partitioning by Country","Use materialized view for frequent geo queries"]},{queryId:"correlation-003",query:"SecurityEvents | join ThreatIndicators on $left.SourceIP == $right.IP",executionTime:7834,resourceUsage:{cpuTime:5.7,memoryUsage:1205.3,networkIO:234.7},recordsScanned:12847592,recordsReturned:23456,scanEfficiency:62.8,cacheHitRate:12.7,status:"critical",suggestions:["Optimize join strategy using broadcast hint","Create lookup table for threat indicators","Implement incremental processing","Add time-based partitioning for both tables"]},{queryId:"pipeline-health-004",query:"PipelineMetrics | summarize AvgLatency = avg(Latency), TotalThreats = sum(Threats)",executionTime:892,resourceUsage:{cpuTime:.3,memoryUsage:78.4,networkIO:12.1},recordsScanned:456789,recordsReturned:12,scanEfficiency:95.2,cacheHitRate:94.6,status:"optimized",suggestions:["Query is well-optimized for current workload"]}],c={clusterHealth:{nodeCount:6,activeNodes:6,avgCpuUsage:34.7,avgMemoryUsage:67.2,avgDiskUsage:23.8},ingestionHealth:{throughput:847.3,latency:2.4,errorRate:.02,queueSize:156},queryHealth:{avgExecutionTime:2156,concurrentQueries:23,cacheHitRate:67.8,timeoutRate:.1}};u(a),x(c)}catch(a){console.error("Failed to load performance data:",a)}finally{l(!1)}},_=a=>{switch(a){case"optimized":return"#10b981";case"warning":return"#f59e0b";case"critical":return"#ef4444";default:return"#6b7280"}},p=a=>{switch(a){case"optimized":return e.jsx(o,{size:16});case"warning":return e.jsx(m,{size:16});case"critical":return e.jsx(m,{size:16});default:return e.jsx(n,{size:16})}};return g?e.jsxs("div",{className:s.loadingContainer,children:[e.jsx(n,{className:s.loadingIcon}),e.jsx("span",{children:"Loading performance metrics..."})]}):e.jsxs("div",{className:s.performancePage,children:[e.jsxs("div",{className:s.header,children:[e.jsxs("div",{className:s.titleSection,children:[e.jsx(f,{className:s.titleIcon}),e.jsxs("div",{children:[e.jsx("h1",{children:"Performance & Optimization"}),e.jsx("p",{children:"Real-time query performance, system health, and optimization insights"})]})]}),e.jsxs("div",{className:s.refreshIndicator,children:[e.jsx(y,{size:16}),e.jsx("span",{children:"Auto-refresh: 30s"})]})]}),t&&e.jsxs("div",{className:s.systemHealthGrid,children:[e.jsxs("div",{className:s.healthCard,children:[e.jsxs("div",{className:s.cardHeader,children:[e.jsx(v,{className:s.cardIcon}),e.jsx("h3",{children:"Cluster Health"})]}),e.jsxs("div",{className:s.healthMetrics,children:[e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Active Nodes"}),e.jsxs("span",{className:s.metricValue,children:[t.clusterHealth.activeNodes,"/",t.clusterHealth.nodeCount]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"CPU Usage"}),e.jsxs("span",{className:s.metricValue,children:[t.clusterHealth.avgCpuUsage,"%"]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Memory Usage"}),e.jsxs("span",{className:s.metricValue,children:[t.clusterHealth.avgMemoryUsage,"%"]})]})]})]}),e.jsxs("div",{className:s.healthCard,children:[e.jsxs("div",{className:s.cardHeader,children:[e.jsx(N,{className:s.cardIcon}),e.jsx("h3",{children:"Ingestion Health"})]}),e.jsxs("div",{className:s.healthMetrics,children:[e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Throughput"}),e.jsxs("span",{className:s.metricValue,children:[t.ingestionHealth.throughput," MB/s"]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Latency"}),e.jsxs("span",{className:s.metricValue,children:[t.ingestionHealth.latency,"s"]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Error Rate"}),e.jsxs("span",{className:s.metricValue,children:[t.ingestionHealth.errorRate,"%"]})]})]})]}),e.jsxs("div",{className:s.healthCard,children:[e.jsxs("div",{className:s.cardHeader,children:[e.jsx(n,{className:s.cardIcon}),e.jsx("h3",{children:"Query Performance"})]}),e.jsxs("div",{className:s.healthMetrics,children:[e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Avg Execution"}),e.jsxs("span",{className:s.metricValue,children:[t.queryHealth.avgExecutionTime,"ms"]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Cache Hit Rate"}),e.jsxs("span",{className:s.metricValue,children:[t.queryHealth.cacheHitRate,"%"]})]}),e.jsxs("div",{className:s.metric,children:[e.jsx("span",{className:s.metricLabel,children:"Concurrent"}),e.jsx("span",{className:s.metricValue,children:t.queryHealth.concurrentQueries})]})]})]})]}),e.jsxs("div",{className:s.queryMetricsSection,children:[e.jsx("h2",{children:"Query Performance Analysis"}),e.jsx("div",{className:s.metricsGrid,children:h.map(a=>e.jsxs("div",{className:`${s.metricCard} ${(i==null?void 0:i.queryId)===a.queryId?s.selected:""}`,onClick:()=>j(a),children:[e.jsxs("div",{className:s.metricHeader,children:[e.jsxs("div",{className:s.statusIndicator,style:{color:_(a.status)},children:[p(a.status),e.jsx("span",{className:s.statusText,children:a.status})]}),e.jsx("span",{className:s.metricId,children:a.queryId})]}),e.jsx("div",{className:s.metricQuery,children:e.jsxs("code",{children:[a.query.substring(0,100),"..."]})}),e.jsxs("div",{className:s.metricStats,children:[e.jsxs("div",{className:s.stat,children:[e.jsx(w,{size:14}),e.jsxs("span",{children:[a.executionTime,"ms"]})]}),e.jsxs("div",{className:s.stat,children:[e.jsx(C,{size:14}),e.jsxs("span",{children:[a.scanEfficiency.toFixed(1),"% efficient"]})]}),e.jsxs("div",{className:s.stat,children:[e.jsx(I,{size:14}),e.jsxs("span",{children:[a.resourceUsage.memoryUsage.toFixed(1)," MB"]})]})]})]},a.queryId))})]}),i&&e.jsxs("div",{className:s.detailView,children:[e.jsxs("h3",{children:["Query Analysis: ",i.queryId]}),e.jsxs("div",{className:s.detailGrid,children:[e.jsxs("div",{className:s.detailCard,children:[e.jsx("h4",{children:"Execution Metrics"}),e.jsxs("div",{className:s.detailMetrics,children:[e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Execution Time"}),e.jsxs("span",{children:[i.executionTime,"ms"]})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Records Scanned"}),e.jsx("span",{children:i.recordsScanned.toLocaleString()})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Records Returned"}),e.jsx("span",{children:i.recordsReturned.toLocaleString()})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Scan Efficiency"}),e.jsxs("span",{children:[i.scanEfficiency.toFixed(2),"%"]})]})]})]}),e.jsxs("div",{className:s.detailCard,children:[e.jsx("h4",{children:"Resource Usage"}),e.jsxs("div",{className:s.detailMetrics,children:[e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"CPU Time"}),e.jsxs("span",{children:[i.resourceUsage.cpuTime,"s"]})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Memory Usage"}),e.jsxs("span",{children:[i.resourceUsage.memoryUsage.toFixed(1)," MB"]})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Network I/O"}),e.jsxs("span",{children:[i.resourceUsage.networkIO.toFixed(1)," MB"]})]}),e.jsxs("div",{className:s.detailMetric,children:[e.jsx("span",{children:"Cache Hit Rate"}),e.jsxs("span",{children:[i.cacheHitRate.toFixed(1),"%"]})]})]})]}),e.jsxs("div",{className:s.detailCard,children:[e.jsx("h4",{children:"Optimization Suggestions"}),e.jsx("div",{className:s.suggestions,children:i.suggestions.map((a,c)=>e.jsxs("div",{className:s.suggestion,children:[e.jsx(o,{size:14}),e.jsx("span",{children:a})]},c))})]})]}),e.jsxs("div",{className:s.queryCode,children:[e.jsx("h4",{children:"Full Query"}),e.jsx("pre",{children:e.jsx("code",{children:i.query})})]})]})]})};export{me as default};
//# sourceMappingURL=Performance-BCJ7lbZe.js.map
