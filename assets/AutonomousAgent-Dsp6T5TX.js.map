{"version":3,"file":"AutonomousAgent-Dsp6T5TX.js","sources":["../../src/utils/aiService.ts","../../src/components/AutonomousAgent.tsx"],"sourcesContent":["import type { Pipeline, Alert, Investigation, InvestigationFinding, InvestigationStep } from '../types';\n\n// Mock AI Service that simulates Claude API for autonomous investigation\nexport class AutonomousInvestigationService {\n  private static instance: AutonomousInvestigationService;\n\n  static getInstance(): AutonomousInvestigationService {\n    if (!AutonomousInvestigationService.instance) {\n      AutonomousInvestigationService.instance = new AutonomousInvestigationService();\n    }\n    return AutonomousInvestigationService.instance;\n  }\n\n  // Simulate AI analysis based on pipeline data and alerts\n  async investigateAnomalies(\n    pipelines: Pipeline[], \n    _alerts: Alert[], \n    triggerType: string\n  ): Promise<{\n    findings: InvestigationFinding[];\n    summary: string;\n    recommendations: string[];\n    steps: InvestigationStep[];\n  }> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n    const failedPipelines = pipelines.filter(p => p.status === 'failed');\n    \n    // Analyze patterns\n    const sourceGroups = this.groupPipelinesBySource(failedPipelines);\n    const timePatterns = this.analyzeTimePatterns(failedPipelines);\n    \n    // Generate AI findings based on pattern analysis\n    const findings = this.generateFindings(sourceGroups, timePatterns, triggerType);\n    \n    return {\n      findings,\n      summary: `Investigation completed: ${failedPipelines.length} failed pipelines analyzed. Pattern analysis suggests ${this.getPrimaryRootCause(sourceGroups)}.`,\n      recommendations: this.generateRecommendations(sourceGroups, triggerType),\n      steps: this.generateInvestigationSteps(triggerType, failedPipelines.length)\n    };\n  }\n\n  private groupPipelinesBySource(pipelines: Pipeline[]): Record<string, Pipeline[]> {\n    return pipelines.reduce((groups, pipeline) => {\n      const source = pipeline.source;\n      if (!groups[source]) {\n        groups[source] = [];\n      }\n      groups[source].push(pipeline);\n      return groups;\n    }, {} as Record<string, Pipeline[]>);\n  }\n\n  private analyzeTimePatterns(pipelines: Pipeline[]): any {\n    const times = pipelines.map(p => new Date(p.lastRun).getTime());\n    const minTime = Math.min(...times);\n    const maxTime = Math.max(...times);\n    \n    return {\n      timeSpread: maxTime - minTime,\n      clustered: (maxTime - minTime) < 300000, // 5 minutes\n      averageTime: times.reduce((a, b) => a + b, 0) / times.length\n    };\n  }\n\n  private generateFindings(sourceGroups: Record<string, Pipeline[]>, _timePatterns: any, _triggerType: string): InvestigationFinding[] {\n    const findings: InvestigationFinding[] = [];\n    \n    // Add authentication cascade finding if multiple sources affected\n    if (Object.keys(sourceGroups).length > 1) {\n      findings.push({\n        id: `cascade-${Date.now()}`,\n        timestamp: new Date(),\n        type: 'correlation',\n        title: 'Authentication Service Cascade Failure',\n        description: `Detected systematic authentication failures across ${Object.keys(sourceGroups).length} data sources.`,\n        confidence: 94,\n        severity: 'high',\n        affectedPipelines: Object.values(sourceGroups).flat().map(p => p.id),\n        evidence: [\n          'Regional disparity in pipeline failures detected',\n          'Similar incident pattern recorded in historical data'\n        ],\n        suggestedActions: [\n          'Verify OAuth token refresh service status',\n          'Check token rotation schedule and regional deployment'\n        ]\n      });\n    }\n\n    return findings;\n  }\n\n  private getPrimaryRootCause(sourceGroups: Record<string, Pipeline[]>): string {\n    if (Object.keys(sourceGroups).length > 2) {\n      return 'shared infrastructure dependency failure';\n    } else if (Object.keys(sourceGroups).length === 1) {\n      return 'source-specific service disruption';\n    } else {\n      return 'authentication cascade failure';\n    }\n  }\n\n  private generateRecommendations(sourceGroups: Record<string, Pipeline[]>, _triggerType: string): string[] {\n    const recommendations: string[] = [];\n    \n    if (Object.keys(sourceGroups).length > 1) {\n      recommendations.push('Deploy token refresh service to affected regions (ETA: 8 minutes)');\n      recommendations.push('Implement emergency authentication bypass for critical pipelines');\n      recommendations.push('Review authentication service logs for error correlation');\n    } else {\n      recommendations.push('Review source-specific API quotas and rate limits');\n      recommendations.push('Implement fallback data collection mechanisms');\n      recommendations.push('Contact vendor support for service status updates');\n    }\n    \n    return recommendations;\n  }\n\n  private generateInvestigationSteps(triggerType: string, failureCount: number): InvestigationStep[] {\n    return [\n      {\n        id: `step-${Date.now()}`,\n        timestamp: new Date(),\n        action: `Autonomous trigger: ${triggerType}`,\n        details: `Detected ${failureCount} pipeline failures matching trigger criteria`,\n        status: 'completed',\n        data: { result: 'Pattern analysis initiated automatically' }\n      }\n    ];\n  }\n\n  // Historical patterns for the UI\n  getHistoricalPatterns(): Array<{\n    date: string;\n    pattern: string;\n    resolution: string;\n    duration: string;\n  }> {\n    return [\n      {\n        date: '2024-11-15',\n        pattern: 'Authentication cascade failure (LinkedIn, Twitter)',\n        resolution: 'Regional token service deployment',\n        duration: '12 minutes'\n      },\n      {\n        date: '2024-10-22',\n        pattern: 'Multi-source API rate limiting',\n        resolution: 'Emergency quota increase',\n        duration: '8 minutes'\n      }\n    ];\n  }\n\n  async getInvestigationUpdate(): Promise<Partial<Investigation>> {\n    // Simulate update\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return {\n      status: 'active',\n      // progress: Math.floor(Math.random() * 40) + 60,\n      // currentStep: 'Analyzing authentication service dependencies'\n    };\n  }\n}\n\nexport const aiService = AutonomousInvestigationService.getInstance();\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Brain, Activity, AlertTriangle, CheckCircle, Clock, Zap, Search, FileText, TrendingUp, Users, Settings, HelpCircle } from 'lucide-react';\nimport type { AgentState, Investigation, AgentTrigger } from '../types';\nimport { mockPipelines, mockAlerts } from '../data/mockData';\nimport { aiService } from '../utils/aiService';\nimport HowItWorksModal from './HowItWorksModal';\nimport styles from './AutonomousAgent.module.css';\n\n// Mock AI Agent data with realistic investigation scenarios\nconst createMockInvestigation = (id: string, trigger: AgentTrigger): Investigation => {\n  const now = new Date();\n  const startTime = new Date(now.getTime() - Math.random() * 30 * 60 * 1000); // Last 30 minutes\n  \n  const investigations: Record<string, Partial<Investigation>> = {\n    'linkedin-auth-cascade': {\n      trigger: {\n        ...trigger,\n        name: 'LinkedIn Authentication Cascade Failure',\n        conditions: { failureThreshold: 5, timeWindow: 15, patternType: 'cascade_failures' }\n      },\n      findings: [\n        {\n          id: 'auth-pattern-001',\n          timestamp: new Date(startTime.getTime() + 2 * 60 * 1000),\n          type: 'pattern',\n          title: 'LinkedIn OAuth Token Expiration Pattern',\n          description: 'Detected systematic 401 authentication errors across 12 LinkedIn pipelines starting at 14:23 UTC',\n          confidence: 95,\n          severity: 'high',\n          affectedPipelines: mockPipelines.filter(p => p.name.includes('LinkedIn')).slice(0, 12).map(p => p.id),\n          evidence: [\n            'All failures show HTTP 401 Unauthorized',\n            'Pattern matches LinkedIn API auth token lifecycle (72 hours)',\n            'Similar incident occurred 2024-11-15 with identical signature'\n          ],\n          suggestedActions: [\n            'Check OAuth token refresh service',\n            'Verify LinkedIn API key rotation schedule',\n            'Review authentication service logs'\n          ]\n        },\n        {\n          id: 'correlation-001',\n          timestamp: new Date(startTime.getTime() + 5 * 60 * 1000),\n          type: 'correlation',\n          title: 'Regional Impact Analysis',\n          description: 'EU region shows 3x higher failure rate than US region for LinkedIn pipelines',\n          confidence: 87,\n          severity: 'medium',\n          affectedPipelines: [],\n          evidence: [\n            'EU LinkedIn pipelines: 89% failure rate',\n            'US LinkedIn pipelines: 12% failure rate',\n            'Token refresh service deployed to US-East-1 only'\n          ],\n          suggestedActions: [\n            'Deploy token refresh fix to EU regions',\n            'Implement regional failover for authentication'\n          ]\n        }\n      ],\n      summary: `Investigation Summary: LinkedIn authentication cascade failure affecting 12 pipelines starting 14:23 UTC. \nRoot cause identified as OAuth token expiration with regional deployment gap. \nEU region lacks updated token refresh service deployed to US region.\nEstimated resolution time: 15 minutes with regional deployment.\nHistorical precedent: Similar pattern on 2024-11-15 resolved in 18 minutes.`,\n      recommendations: [\n        'Deploy authentication service to EU region immediately',\n        'Implement automated token refresh monitoring',\n        'Add regional authentication redundancy',\n        'Create alert for token expiration warnings (24h advance notice)'\n      ]\n    },\n    'twitter-rate-limit-anomaly': {\n      trigger: {\n        ...trigger,\n        name: 'Twitter Rate Limit Anomaly',\n        conditions: { patternType: 'unusual_patterns' }\n      },\n      findings: [\n        {\n          id: 'rate-limit-001',\n          timestamp: new Date(startTime.getTime() + 3 * 60 * 1000),\n          type: 'anomaly',\n          title: 'Twitter API Rate Limit Exceeded at 3x Normal Rate',\n          description: 'Twitter pipelines hitting rate limits 300% faster than baseline, indicating possible API quota changes',\n          confidence: 92,\n          severity: 'high',\n          affectedPipelines: mockPipelines.filter(p => p.name.includes('Twitter')).map(p => p.id),\n          evidence: [\n            'Rate limit hit after 1,200 calls vs normal 3,600',\n            'Twitter API documentation updated 2 days ago',\n            'Similar pattern across all Twitter data collection pipelines'\n          ],\n          suggestedActions: [\n            'Review Twitter API tier and quotas',\n            'Implement dynamic rate limiting',\n            'Contact Twitter API support'\n          ]\n        }\n      ],\n      summary: `Twitter API rate limiting anomaly detected. Rate limits reduced by ~67% from previous quotas.\nLikely due to Twitter API tier changes announced this week.\nRecommend immediate quota review and pipeline throttling adjustments.`\n    }\n  };\n\n  const baseInvestigation = investigations[id] || {};\n  \n  return {\n    id,\n    startTime,\n    status: 'active',\n    trigger,\n    triggerData: { failedPipelines: Math.floor(Math.random() * 10) + 5 },\n    steps: [\n      {\n        id: 'step-1',\n        timestamp: new Date(startTime.getTime() + 30 * 1000),\n        action: 'Triggered by cascade failure detection',\n        details: `Detected ${baseInvestigation.trigger?.conditions?.failureThreshold || 5} related failures within ${baseInvestigation.trigger?.conditions?.timeWindow || 15} minutes`,\n        status: 'completed'\n      },\n      {\n        id: 'step-2',\n        timestamp: new Date(startTime.getTime() + 60 * 1000),\n        action: 'Analyzing failure patterns',\n        details: 'Examining error codes, timestamps, and affected pipeline characteristics',\n        status: 'completed'\n      },\n      {\n        id: 'step-3',\n        timestamp: new Date(startTime.getTime() + 120 * 1000),\n        action: 'Correlating with historical data',\n        details: 'Checking last 30 days for similar patterns and resolutions',\n        status: 'completed'\n      },\n      {\n        id: 'step-4',\n        timestamp: new Date(startTime.getTime() + 180 * 1000),\n        action: 'Generating investigation report',\n        details: 'Compiling findings and recommended actions',\n        status: 'in_progress'\n      }\n    ],\n    findings: baseInvestigation.findings || [],\n    summary: baseInvestigation.summary,\n    recommendations: baseInvestigation.recommendations || [],\n    affectedPipelines: baseInvestigation.findings?.[0]?.affectedPipelines || [],\n    estimatedImpact: {\n      severity: 'high',\n      affectedSources: ['LinkedIn', 'Twitter'],\n      estimatedDowntime: 25\n    },\n    ...baseInvestigation\n  };\n};\n\nconst mockAgentTriggers: AgentTrigger[] = [\n  {\n    id: 'multi-failure',\n    name: 'Multiple Related Failures',\n    description: 'Triggers when multiple pipelines from the same source fail within 15 minutes',\n    enabled: true,\n    conditions: {\n      failureThreshold: 3,\n      timeWindow: 15,\n      patternType: 'multiple_failures'\n    }\n  },\n  {\n    id: 'unusual-patterns',\n    name: 'Unusual Patterns',\n    description: 'Detects abnormal failure patterns across data sources',\n    enabled: true,\n    conditions: {\n      patternType: 'unusual_patterns'\n    }\n  },\n  {\n    id: 'cascade-failures',\n    name: 'Cascade Failures',\n    description: 'Identifies cascading failures across dependent pipelines',\n    enabled: true,\n    conditions: {\n      patternType: 'cascade_failures'\n    }\n  },\n  {\n    id: 'performance-degradation',\n    name: 'Performance Degradation',\n    description: 'Monitors for gradual performance degradation patterns',\n    enabled: true,\n    conditions: {\n      patternType: 'performance_degradation'\n    }\n  }\n];\n\nconst initialAgentState: AgentState = {\n  status: 'investigating',\n  currentInvestigation: createMockInvestigation('linkedin-auth-cascade', mockAgentTriggers[2]),\n  recentInvestigations: [\n    createMockInvestigation('twitter-rate-limit-anomaly', mockAgentTriggers[1])\n  ],\n  triggers: mockAgentTriggers,\n  findings: [],\n  activityLog: [],\n  lastActivity: new Date(),\n  investigationsToday: 3,\n  meanTimeToResolution: 18.5\n};\n\nconst AutonomousAgent: React.FC = () => {\n  const [agentState, setAgentState] = useState<AgentState>(initialAgentState);\n  const [selectedView, setSelectedView] = useState<'status' | 'investigation' | 'findings' | 'activity' | 'config'>('status');\n  const [isInvestigating, setIsInvestigating] = useState(false);\n  const [showHowItWorks, setShowHowItWorks] = useState(false);\n\n  // Trigger a new investigation using the AI service\n  const triggerInvestigation = useCallback(async (trigger: AgentTrigger) => {\n    setIsInvestigating(true);\n    setAgentState(prev => ({ ...prev, status: 'investigating' }));\n\n    try {\n      const investigation = await aiService.investigateAnomalies(\n        mockPipelines,\n        mockAlerts,\n        trigger.conditions.patternType || 'multiple_failures'\n      );\n\n      const newInvestigation: Investigation = {\n        id: `investigation-${Date.now()}`,\n        startTime: new Date(),\n        status: 'active',\n        trigger,\n        triggerData: { failedPipelines: mockPipelines.filter(p => p.status === 'failed').length },\n        steps: investigation.steps,\n        findings: investigation.findings,\n        summary: investigation.summary,\n        recommendations: investigation.recommendations,\n        affectedPipelines: investigation.findings.flatMap(f => f.affectedPipelines),\n        estimatedImpact: {\n          severity: 'high',\n          affectedSources: [...new Set(mockPipelines.filter(p => p.status === 'failed').map(p => p.source))],\n          estimatedDowntime: 25\n        }\n      };\n\n      setAgentState(prev => ({\n        ...prev,\n        status: 'reporting',\n        currentInvestigation: newInvestigation,\n        recentInvestigations: [newInvestigation, ...prev.recentInvestigations.slice(0, 4)],\n        investigationsToday: prev.investigationsToday + 1,\n        lastActivity: new Date()\n      }));\n\n    } catch (error) {\n      console.error('Investigation failed:', error);\n      setAgentState(prev => ({ ...prev, status: 'idle' }));\n    } finally {\n      setIsInvestigating(false);\n    }\n  }, []);\n\n  // Simulate autonomous triggering\n  useEffect(() => {\n    const checkForAnomalies = () => {\n      const failedPipelines = mockPipelines.filter(p => p.status === 'failed');\n      const enabledTriggers = agentState.triggers.filter(t => t.enabled);\n\n      // Check if any triggers should fire\n      for (const trigger of enabledTriggers) {\n        if (trigger.conditions.failureThreshold && failedPipelines.length >= trigger.conditions.failureThreshold) {\n          if (!agentState.currentInvestigation && !isInvestigating) {\n            console.log(`Autonomous trigger activated: ${trigger.name}`);\n            triggerInvestigation(trigger);\n            break;\n          }\n        }\n      }\n    };\n\n    const interval = setInterval(checkForAnomalies, 10000); // Check every 10 seconds\n    return () => clearInterval(interval);\n  }, [agentState.triggers, agentState.currentInvestigation, isInvestigating, triggerInvestigation]);\n\n  // Simulate real-time agent activity\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAgentState(prev => {\n        if (prev.status === 'investigating' && prev.currentInvestigation) {\n          // Simulate investigation progress\n          const investigation = prev.currentInvestigation;\n          const incompleteSteps = investigation.steps.filter(s => s.status === 'in_progress');\n          \n          if (incompleteSteps.length > 0) {\n            const updatedSteps = investigation.steps.map(step => \n              step.status === 'in_progress' ? { ...step, status: 'completed' as const } : step\n            );\n            \n            return {\n              ...prev,\n              currentInvestigation: {\n                ...investigation,\n                steps: updatedSteps\n              },\n              lastActivity: new Date()\n            };\n          }\n        }\n        return prev;\n      });\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusIcon = () => {\n    switch (agentState.status) {\n      case 'idle': return <Clock className={styles.statusIcon} />;\n      case 'investigating': return <Search className={styles.statusIcon} />;\n      case 'reporting': return <FileText className={styles.statusIcon} />;\n      case 'monitoring': return <Activity className={styles.statusIcon} />;\n      default: return <Brain className={styles.statusIcon} />;\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', { \n      hour12: false, \n      hour: '2-digit', \n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const renderStatusOverview = () => (\n    <div className={styles.statusOverview}>\n      <div className={styles.statusHeader}>\n        <div className={styles.agentStatus}>\n          {getStatusIcon()}\n          <span className={styles.statusText}>\n            {agentState.status.charAt(0).toUpperCase() + agentState.status.slice(1)}\n          </span>\n        </div>\n        <div className={styles.metrics}>\n          <div className={styles.metric}>\n            <span className={styles.metricLabel}>Investigations Today</span>\n            <span className={styles.metricValue}>{agentState.investigationsToday}</span>\n          </div>\n          <div className={styles.metric}>\n            <span className={styles.metricLabel}>Mean Resolution Time</span>\n            <span className={styles.metricValue}>{agentState.meanTimeToResolution}m</span>\n          </div>\n        </div>\n      </div>\n\n      {agentState.currentInvestigation && (\n        <div className={styles.currentInvestigation}>\n          <h3>Current Investigation</h3>\n          <div className={styles.investigationCard}>\n            <div className={styles.investigationHeader}>\n              <h4>{agentState.currentInvestigation.trigger.name}</h4>\n              <span className={styles.investigationTime}>\n                Started: {formatTime(agentState.currentInvestigation.startTime)}\n              </span>\n            </div>\n            <div className={styles.investigationProgress}>\n              <div className={styles.progressBar}>\n                <div \n                  className={styles.progressFill}\n                  style={{ \n                    width: `${(agentState.currentInvestigation.steps.filter(s => s.status === 'completed').length / agentState.currentInvestigation.steps.length) * 100}%` \n                  }}\n                />\n              </div>\n              <span className={styles.progressText}>\n                {agentState.currentInvestigation.steps.filter(s => s.status === 'completed').length} / {agentState.currentInvestigation.steps.length} steps completed\n              </span>\n            </div>\n            <div className={styles.affectedPipelines}>\n              <AlertTriangle size={16} />\n              <span>{agentState.currentInvestigation.affectedPipelines.length} pipelines affected</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.recentFindings}>\n        <h3>Recent Findings</h3>\n        {agentState.currentInvestigation?.findings.slice(0, 3).map(finding => (\n          <div key={finding.id} className={styles.findingCard}>\n            <div className={styles.findingHeader}>\n              <span className={`${styles.findingType} ${styles[finding.type]}`}>\n                {finding.type.toUpperCase()}\n              </span>\n              <span className={`${styles.severity} ${styles[finding.severity]}`}>\n                {finding.severity.toUpperCase()}\n              </span>\n            </div>\n            <h4>{finding.title}</h4>\n            <p>{finding.description}</p>\n            <div className={styles.confidence}>\n              Confidence: {finding.confidence}%\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderInvestigationDetails = () => (\n    <div className={styles.investigationDetails}>\n      {agentState.currentInvestigation ? (\n        <>\n          <div className={styles.investigationSummary}>\n            <h3>Investigation Details</h3>\n            <div className={styles.summaryCard}>\n              <h4>{agentState.currentInvestigation.trigger.name}</h4>\n              <p className={styles.summary}>{agentState.currentInvestigation.summary}</p>\n              \n              <div className={styles.recommendations}>\n                <h5>Recommended Actions:</h5>\n                <ul>\n                  {agentState.currentInvestigation.recommendations.map((rec, idx) => (\n                    <li key={idx}>{rec}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.investigationSteps}>\n            <h3>Investigation Steps</h3>\n            {agentState.currentInvestigation.steps.map(step => (\n              <div key={step.id} className={`${styles.stepCard} ${styles[step.status]}`}>\n                <div className={styles.stepHeader}>\n                  <span className={styles.stepTime}>{formatTime(step.timestamp)}</span>\n                  <span className={styles.stepStatus}>\n                    {step.status === 'completed' && <CheckCircle size={16} />}\n                    {step.status === 'in_progress' && <Clock size={16} />}\n                    {step.status === 'failed' && <AlertTriangle size={16} />}\n                  </span>\n                </div>\n                <h4>{step.action}</h4>\n                <p>{step.details}</p>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : (\n        <div className={styles.noInvestigation}>\n          <Brain size={64} />\n          <h3>No Active Investigation</h3>\n          <p>Agent is monitoring for anomalies and patterns</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderFindings = () => (\n    <div className={styles.findingsView}>\n      <h3>Investigation Findings</h3>\n      {agentState.currentInvestigation?.findings.map(finding => (\n        <div key={finding.id} className={styles.detailedFinding}>\n          <div className={styles.findingMeta}>\n            <span className={`${styles.findingType} ${styles[finding.type]}`}>\n              {finding.type.toUpperCase()}\n            </span>\n            <span className={`${styles.severity} ${styles[finding.severity]}`}>\n              {finding.severity.toUpperCase()}\n            </span>\n            <span className={styles.confidence}>\n              {finding.confidence}% confidence\n            </span>\n          </div>\n          <h4>{finding.title}</h4>\n          <p>{finding.description}</p>\n          \n          <div className={styles.evidence}>\n            <h5>Evidence:</h5>\n            <ul>\n              {finding.evidence.map((evidence, idx) => (\n                <li key={idx}>{evidence}</li>\n              ))}\n            </ul>\n          </div>\n\n          <div className={styles.suggestedActions}>\n            <h5>Suggested Actions:</h5>\n            <ul>\n              {finding.suggestedActions.map((action, idx) => (\n                <li key={idx}>{action}</li>\n              ))}\n            </ul>\n          </div>\n\n          <div className={styles.affectedCount}>\n            <Users size={16} />\n            <span>{finding.affectedPipelines.length} pipelines affected</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderActivityLog = () => (\n    <div className={styles.activityLog}>\n      <h3>Agent Activity Log</h3>\n      <div className={styles.logEntries}>\n        {agentState.currentInvestigation?.steps.map(step => (\n          <div key={step.id} className={styles.logEntry}>\n            <span className={styles.timestamp}>{formatTime(step.timestamp)}</span>\n            <span className={styles.action}>{step.action}</span>\n            <span className={`${styles.status} ${styles[step.status]}`}>\n              {step.status.toUpperCase()}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderConfiguration = () => (\n    <div className={styles.configuration}>\n      <h3>Agent Configuration</h3>\n      <div className={styles.triggers}>\n        <h4>Investigation Triggers</h4>\n        {agentState.triggers.map(trigger => (\n          <div key={trigger.id} className={styles.triggerCard}>\n            <div className={styles.triggerHeader}>\n              <h5>{trigger.name}</h5>\n              <label className={styles.toggle}>\n                <input \n                  type=\"checkbox\" \n                  checked={trigger.enabled}\n                  onChange={() => {\n                    setAgentState(prev => ({\n                      ...prev,\n                      triggers: prev.triggers.map(t => \n                        t.id === trigger.id ? { ...t, enabled: !t.enabled } : t\n                      )\n                    }));\n                  }}\n                />\n                <span className={styles.slider}></span>\n              </label>\n            </div>\n            <p>{trigger.description}</p>\n            <div className={styles.triggerConditions}>\n              {trigger.conditions.failureThreshold && (\n                <span>Threshold: {trigger.conditions.failureThreshold} failures</span>\n              )}\n              {trigger.conditions.timeWindow && (\n                <span>Window: {trigger.conditions.timeWindow} minutes</span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={styles.autonomousAgent}>\n      <div className={styles.header}>\n        <div className={styles.titleSection}>\n          <Brain className={styles.headerIcon} />\n          <div>\n            <h1>Autonomous Investigation Agent</h1>\n            <p>AI-powered threat intelligence pipeline monitoring and investigation</p>\n          </div>\n        </div>\n        <div className={styles.headerActions}>\n          <button \n            className={styles.howItWorksButton}\n            onClick={() => setShowHowItWorks(true)}\n            title=\"Learn how this system works\"\n          >\n            <HelpCircle size={16} />\n            How does it work?\n          </button>\n          <div className={styles.agentIndicator}>\n            <div className={`${styles.statusDot} ${styles[agentState.status]}`}></div>\n            <span>Last activity: {formatTime(agentState.lastActivity)}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.navigation}>\n        <button \n          className={selectedView === 'status' ? styles.active : ''}\n          onClick={() => setSelectedView('status')}\n        >\n          <Activity size={16} />\n          Status\n        </button>\n        <button \n          className={selectedView === 'investigation' ? styles.active : ''}\n          onClick={() => setSelectedView('investigation')}\n        >\n          <Search size={16} />\n          Investigation\n        </button>\n        <button \n          className={selectedView === 'findings' ? styles.active : ''}\n          onClick={() => setSelectedView('findings')}\n        >\n          <TrendingUp size={16} />\n          Findings\n        </button>\n        <button \n          className={selectedView === 'activity' ? styles.active : ''}\n          onClick={() => setSelectedView('activity')}\n        >\n          <FileText size={16} />\n          Activity Log\n        </button>\n        <button \n          className={selectedView === 'config' ? styles.active : ''}\n          onClick={() => setSelectedView('config')}\n        >\n          <Settings size={16} />\n          Configuration\n        </button>\n        \n        {/* Manual Investigation Trigger */}\n        <button \n          className={styles.triggerButton}\n          onClick={() => triggerInvestigation(agentState.triggers[0])}\n          disabled={isInvestigating || !!agentState.currentInvestigation}\n        >\n          <Zap size={16} />\n          {isInvestigating ? 'Investigating...' : 'Trigger Investigation'}\n        </button>\n      </div>\n\n      <div className={styles.content}>\n        {selectedView === 'status' && renderStatusOverview()}\n        {selectedView === 'investigation' && renderInvestigationDetails()}\n        {selectedView === 'findings' && renderFindings()}\n        {selectedView === 'activity' && renderActivityLog()}\n        {selectedView === 'config' && renderConfiguration()}\n      </div>\n      \n      <HowItWorksModal \n        isOpen={showHowItWorks}\n        onClose={() => setShowHowItWorks(false)}\n        section=\"autonomousAgent\"\n      />\n    </div>\n  );\n};\n\nexport default AutonomousAgent;\n"],"names":["_AutonomousInvestigationService","pipelines","_alerts","triggerType","resolve","failedPipelines","p","sourceGroups","timePatterns","groups","pipeline","source","times","minTime","maxTime","a","b","_timePatterns","_triggerType","findings","recommendations","failureCount","__publicField","AutonomousInvestigationService","aiService","createMockInvestigation","id","trigger","now","startTime","baseInvestigation","mockPipelines","_b","_a","_d","_c","_f","_e","mockAgentTriggers","initialAgentState","AutonomousAgent","agentState","setAgentState","useState","selectedView","setSelectedView","isInvestigating","setIsInvestigating","showHowItWorks","setShowHowItWorks","triggerInvestigation","useCallback","prev","investigation","mockAlerts","newInvestigation","f","error","useEffect","interval","enabledTriggers","t","s","updatedSteps","step","getStatusIcon","jsx","Clock","styles","Search","FileText","Activity","Brain","formatTime","date","renderStatusOverview","jsxs","AlertTriangle","finding","renderInvestigationDetails","Fragment","rec","idx","CheckCircle","renderFindings","evidence","action","Users","renderActivityLog","renderConfiguration","HelpCircle","TrendingUp","Settings","Zap","HowItWorksModal"],"mappings":"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"}